<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CSS详解</title>
    <link href="/2022/01/19/css/"/>
    <url>/2022/01/19/css/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="1-CSS简介"><a href="#1-CSS简介" class="headerlink" title="1.CSS简介"></a>1.CSS简介</h2><p>美化网页，布局页面（美化html）</p><p>css-层叠样式表-css样式表-级联样式表</p><p><strong>CSS最大价值：</strong></p><p>由HTML专注去做结构呈现，样式交给CSS，结构（HTML）与样式（CSS）分离 </p><p><strong>CSS语法规范：</strong></p><p>​      CSS由选择器（HTML的标签）以及一条或多条声明</p><p>选择器{样式}== 给谁改样式{改什么样式}       </p><p><strong>CSS代码风格：</strong></p><ol><li><p>样式格式书写-展开格式</p></li><li><p>样式大小写风格-小写</p></li><li><p>样式空格风格：</p></li></ol><p>  冒号后面，属性值前面保留空格</p><p>  选择器（标签）和大括号中间保留空格</p><h2 id="2-CSS基础选择器"><a href="#2-CSS基础选择器" class="headerlink" title="2. CSS基础选择器"></a>2. CSS基础选择器</h2><p>   分类：标签选择器，类选择器，id选择器，通配符选择器</p><p><strong>（1）标签选择器</strong></p><p>（同类型标签统一设置样式）—-不能差异化选择</p><p>​      标签名作为选择器</p><p><strong>（2）类选择器（常用）</strong></p><p>​    （单独选择一个或几个标签）</p><p>样式点定义，结构类（class）调用，一个或多个，开发最常用，</p><p>​    语法： .类名{}  class=”类名”</p><p>​      多类名： &lt;div class=”red  font20”&gt;亚索</div>  中间用空格隔开       </p><p><strong>（3）id选择器</strong></p><p>​     样式#定义，结构id调用，只能调用一次，别人切勿使用</p><p>​     通过#号定义样式，通过id属性调用</p><p><strong>（4）通配符选择器</strong></p><p>​    选取页面中****所有****元素（标签）</p><h2 id="3-CSS字体属性"><a href="#3-CSS字体属性" class="headerlink" title="3. CSS字体属性"></a>3. CSS字体属性</h2><p>​    css Fonts（字体）属性用于定义字体系列，大小，粗细，和文字样式（如斜体）</p><p>（1）字体系列</p><p>font-family: ’宋体/微软雅黑’ ——-Microsoft yahei</p><p>​      <strong>尽量使用系统默认自带字体</strong></p><p>（2）大小（px是像素）</p><p>   font-size：20px; </p><p>   标题标签比较特殊，需要单独指定大小</p><p>（3） 粗细</p><p>   font-weight：normal（正常）bold（粗）bolder（特粗）lighter（细体）</p><p>   加粗700==bold   正常400==normal(提倡数字)</p><p>（4）文字样式</p><p>   font-style：normal（正常）italic（倾斜）</p><p><strong>字体复合属性：</strong></p><p>   font: font-style  font-weight  font-size/line-height  font-family;</p><p>​       不能更换顺序，空格隔开</p><p>​       font-size  font-family必须写，其他可以省略</p><h2 id="4-CSS文本属性"><a href="#4-CSS文本属性" class="headerlink" title="4. CSS文本属性"></a>4. CSS文本属性</h2><p>   CSS Text（文本）属性可定义文本外观，比如文本颜色、对其文本、修饰文本、文本缩进、行间距等。</p><p>*文本颜色  <em><strong>*color*</strong></em>: red;  十六进制-#FF0000(开发常用)</p><p>预定义值red/RGB代码-rgb(225,0,0)/rgb(100%,0%,0%)</p><p>*对其文本  text-align: left/right/center  </p><p>*装饰文本  text-decoration: none/underline/overline/line-through  </p><p>*文本缩进  text-indent:  em(一个文字大小,相当于24px)</p><p>*行间距   line-height(文本高度+上间距+下间距)</p><h2 id="5-CSS引入方式"><a href="#5-CSS引入方式" class="headerlink" title="5. CSS引入方式"></a>5. CSS引入方式</h2><p>*内部样式表  <style>CSS代码<style></p><p>*行内样式表  签内部的style属性中</p><p>**<em>*</em>****外部样式表  <link rel=”stylesheet” href=”css文件路径”></p><p>-2020.7.5</p><h2 id="6-Emmet语法"><a href="#6-Emmet语法" class="headerlink" title="6. Emmet语法"></a>6. Emmet语法</h2><p>使用场景：使用缩写，来提高html/css的编写速度</p><p>*快速生成HTML结构语法</p><p>标签*n  父子&gt;  兄弟+</p><p>类名或者id的  p.name/p#demo(不加标签默认div)    </p><p>生成的div类名有顺序加$   如：.demo$*5</p><p>标签内部写内容可以用{ }</p><p>*快速生成CSS样式语法-输入首字母快速生成(如: w100)</p><h2 id="7-CSS复合选择器"><a href="#7-CSS复合选择器" class="headerlink" title="7. CSS复合选择器"></a>7. CSS复合选择器</h2><p>   分类：后代选择器、子选择器、并集选择器、伪类选择器 等等</p><p>*<strong>*<em>后代选择器  空格*</em></strong></p><p>又称包含选择器——选择父元素里面子元素(后代)</p><p>元素1 元素2(选择1里面所有2,包括子子孙孙)</p><p>*<strong>*<em>子选择器  &gt;*</em></strong></p><p>元素1&gt;元素2(选亲儿子)</p><p>*<strong>*<em>并集选择器  ,*</em></strong></p><p>元素1,元素2…(最后不加逗号)</p><p>任何形式的选择器都可以作为并集选择器的一部分 -2020.7.6                       </p><p>*<strong>*<em>伪类选择器  :*</em></strong></p><p>向某些选择器添加特殊的效果，如给链接添加特殊效果 </p><p>或选择第n个元素，如第n个小li</p><p>*链接伪类选择器（较多）</p><p>a:link/a:visited/a:hover/a:active  未点击/点击过/经过/按下弹起</p><p>​     ****链接需要单独指定样式****（给body指定没用）              </p><p>* :focus伪类选择器（较少）</p><p>input: focus{样式}  //选取获得焦点的input表单元素</p><h2 id="8-CSS的元素显示模式"><a href="#8-CSS的元素显示模式" class="headerlink" title="8. CSS的元素显示模式"></a>8. CSS的元素显示模式</h2><p>*元素显示模式</p><p>元素（标签）以什么方式进行显示</p><p>分类：块元素和行内元素 </p><p>*块元素</p><p>特点：独占一行,可控 宽度/高度/外边距/内边距</p><p>  宽度默认父级宽度,可以放行内或块元素</p><p>文字类的元素内不能使用块级元素(h1-h6/p)</p><p>*行内元素</p><p>特点：一行可以放多个,宽/高设置无效     </p><p>   默认宽度本身内容宽度,只能容纳文本或行内元素 </p><p>注意：a可以放块内元素，但转换块级模式最安全</p><p>如：a，strong，em，span等，span就是典型行内元素</p><p>*行内块元素</p><p>同时具有块元素和行内元素的特点</p><p>特点：一行可以多个  默认宽度就是本身宽度</p><p>   宽高/行高/外边距/内边距可以设置</p><p>如：<img />、<input />、<td></p><p>*元素显示模式转换</p><p>display:block/inline/inline-block  </p><p>*单行文字垂直居中的代码</p><p>​       行高等于盒子的高度 height  line-height</p><h2 id="9-CSS的背景"><a href="#9-CSS的背景" class="headerlink" title="9. CSS的背景"></a>9. CSS的背景</h2><p>  通过CSS背景属性，给页面元素添加背景样式。</p><p>  背景属性可以设置：</p><p>​       背景颜色，背景图片，背景平铺，背景图片位置，背景图像固定</p><p>  既可以添加背景图片，也可以添加背景颜色，只不过背景图片会压住背景颜色</p><p>（1）背景颜色：background-color: transparent(默认透明色)</p><p>（2）背景图片:background-image: url(“”)</p><p>   常用于：logo或者装饰的小图片或超大背景图片</p><p>   优点：非常便于控制位置（图片在盒子中的位置）</p><p>（3）背景平铺:background-repeat</p><p>  background-repeat: repeat|no-repeat|repeat-x|repeat-y</p><p>​          平铺(默认)|不平铺|x轴平铺|y轴平铺</p><p>（4）背景图片位置:background-position: x y;</p><p>   x,y可以是方位名词或者精确单位</p><p>  方位名词：(顺序没关系)</p><p>   top|center|bottom|left|center|right  //只写一个,第二个默认center</p><p>  精确单位：（有顺序）</p><p>   background-position: 20px 50px;  //只写一个,第二个默认center</p><p>  混合单位：（有顺序，第一个一定是x，第二个y）</p><p>（5）背景图像固定:background-attachment</p><p>   如果有文本，默认背景图片滚动</p><p>   background-attachment: scroll/fixed  滚动/固定</p><p>（6）背景复合写法-顺序不固定（空格隔开）</p><p>background: color image(url) repeat attachment position</p><p>新增背景background-size(不能写到复合写法)</p><p>（7）背景色半透明</p><p>   background: rgba(0,0,0,0.5); </p><p>   最后一个参数是alpha透明度，取值范围在0-1之间</p><p>   注意：0.5可写为 .5</p><h2 id="10-CSS三大特性"><a href="#10-CSS三大特性" class="headerlink" title="10. CSS三大特性"></a>10. CSS三大特性</h2><p>三大特性：<em><strong>*层叠性 继承性 优先级*</strong></em></p><p>（1）层叠性</p><p>相同选择器设置相同的样式 就会产生覆盖（层叠）</p><p>样式冲突，遵循的原则是就近原则，哪个样式结构近，就执行哪个样式</p><p>样式不冲突，不会层叠（只会覆盖层叠的部分）</p><p>（2）继承性</p><p>子标签会继承父标签某些样式，如文本颜色和字号。</p><p>继承的用途-行高的继承</p><p>body{ font: 12px/1.5 ‘Microsoft yahei’;} </p><p>若子元素有文字大小，则子元素当前文字大小的1.5倍</p><p>若无，则是父元素的文字大小的1.5倍</p><p>​    优点：子元素可以根据自己的文字大小自动调整行高</p><p>（3）优先级</p><p>当同一个元素指定多个选择器，有优先级的产生</p><p>*选择器相同，执行层叠性</p><p>*选择器不同，根据选择器权重执行</p><p>继承或*(0,0,0,0)&lt;标签选择器(0,0,0,1)&lt;class,伪类选择器(0,0,1,0)</p><p>&lt;id(0,1,0,0)&lt;style(1,0,0,0)&lt;!important（无穷大）</p><p>在样式后面加：!important(优先执行)  如：color : red !important;</p><p>​                             ——- 2020.7.7</p><p>注意：<em><strong>*继承的权重是0*</strong></em></p><p>  a/h1-h6浏览器默认指定了样式，所有a必须单独指定样式（指定body没用）</p><p>复合选择器权重的叠加：只能叠加，没有进位</p><p>​      </p><h2 id="11-CSS盒子模型"><a href="#11-CSS盒子模型" class="headerlink" title="11. CSS盒子模型"></a>11. CSS盒子模型</h2><p>   <img src="file:///C:\Users\ADMINI~1\AppData\Local\Temp\ksohtml1868\wps1.jpg" alt="img"></p><p><strong>（1）</strong><em><strong>*盒子模型*</strong></em></p><p> 组成：border/content/padding/margin</p><p>  <em><strong>*border：*</strong></em></p><p>*组成：border-width/border-color</p><p>​        border-style: solid/dashed/dotted    </p><p>​    *边框的复合写法：border: 1px solid red; </p><p>​      分开写法：border-top: 1px solid red;(top bottom left right)          </p><p>*表格的细线边框：border-collapse: collapse;</p><p>​     相邻边框合并在一起, 如: table,td,th{border-collapse: collapse; }</p><p>*边框会增加盒子的实际大小</p><p>  <em><strong>*padding：*</strong></em></p><p>*padding-left: 12px;  top/bottom/left/right</p><p>*padding简写属性</p><p>​      padding: 5px; 都是5  padding: 5px 10px; 上下5/左右10</p><p>​      padding: 5px 10px 20px  上5/左右10/下20</p><p>​      padding: 5px 10px 20px 30px  上5右10下20左30</p><p>*padding会影响盒子的实际大小-撑大盒子  </p><p>应用：导航栏不给盒子宽度，给盒子相同的padding撑开盒子   </p><p>  ****margin****：</p><p>*margin-left/right/top/bottom   </p><p>*简写 margin: 30px  (和padding一样)   </p><p><em>应用: 块级盒子</em><strong>*水平居中*</strong>* margin: 0 auto; //盒子必须有宽,上下视情况定 </p><p>****注意****：行内元素/行内块元素水平居中: text-align: center(其父元素添加)           </p><p>*外边距合并</p><p>相邻块元素垂直外边距的合并(尽量只给一个盒子添加margin值)</p><p>上margin-button,下margin-top-垂直间距取两个值中较大值</p><p>嵌套块元素垂直外边距的塌陷</p><p>嵌套(父子)关系的块元素,父子都有上外边距，</p><p>此时父元素会塌陷较大的外边距值</p><p>解决方法：父元素定义上边框/上内边距值/父元素加overflow: hidden;        </p><p>**<em>*</em>****清除内外边距：</p><p>   网页元素很多都带有默认的内外边距,布局前清除内外边距</p><p>   CSS的第一句话：*{padding: 0;margin: 0;}</p><p>​      注意：行内元素尽量只设置左右内外边距（上下内外边距设置了没用</p><p>如果需要设置，则将其转换为块级和行内块元素就可以了  2020.7.8</p><p><strong>（2）</strong><em><strong>*圆角边框*</strong></em>(重要)</p><p>​    语法：border-radius: px;  //值越大，圆角越大</p><p>​    写法：参数值可以为数值或百分比</p><p>*圆形盒子的做法：正方形盒子，边长的一半/50%</p><p>*距形盒子的做法：高度height的一半    </p><p>*可以设置不同的圆角：border-radius: 10px 20px 30px 40px; 顺时针</p><p><strong>（3）</strong><em><strong>*盒子阴影*</strong></em></p><p>   box-shadow: h-shadow v-shadow blur spread color inset;</p><p>​     h-shadow/v-shadow(必须)   水平/垂直阴影x/y轴</p><p>​     blur  模糊距离-影子的虚实  spread-影子大小         </p><p>​     color-影子颜色 rgab(0,0,0,.3)一般用透明颜色</p><p>​     inset-默认外阴影（内阴影inset）</p><p>​     注：默认外阴影(outset)不写，否则导致阴影无效</p><p>​       阴影不会占用空间    </p><p>（4）文字阴影（了解）</p><p>   text-shadow: h-shadow v-shadow blur color</p><h2 id="12-CSS浮动"><a href="#12-CSS浮动" class="headerlink" title="12. CSS浮动"></a>12. CSS浮动</h2><p>   <em><strong>*浮动可以让多个块级盒子一行没有缝隙排列显示*</strong></em></p><p>   <em><strong>*经常用于横向排列盒子*</strong></em></p><p>*传统网页布局的三种方式： 普通流（标准流）浮动 定位</p><p>*浮动定义：</p><p>   ****float****属性用于创建浮动框，将其移动到一边，</p><p>直到左边缘或右边缘触及包含块或另一个浮动框的边缘</p><p>*浮动写法：</p><p>   float: left/right/none;  //左浮右浮不浮动(默认) </p><p><strong><em>*</em>*</strong>*<em><strong>*浮动的特性（重难点）*</strong></em></p><p>脱标(不占有位置) 浮起来盖住其他盒子</p><p>一行内没有缝隙显示并且元素顶部对齐</p><p>父盒子装不下会再起一行显示,具有行内块元素的特征    </p><p>*浮动元素经常搭配标准流的父元素</p><p>  用标准流的父元素排列上下位置,子元素采用浮动排列左右位置</p><h2 id="13-浮动的清除"><a href="#13-浮动的清除" class="headerlink" title="13. 浮动的清除"></a>13. 浮动的清除</h2><p>   当一个盒子有很多个浮动子盒子时，不方便给父盒子高度，但子盒子浮动不占位置</p><p>   最后父级盒子高度为0，就会影响下面的标准流盒子。</p><p>   语法: 选择器{clear:left/right/<em><strong>*both*</strong></em>;}  清除左/右/两侧浮动</p><p>   ****方法****：</p><p>\1. 额外标签法/隔墙法-不推荐</p><p>  在浮动父元素末尾添加一个块级空标签，如<div></div>   </p><p>\2. 父级添加overflow: hidden属性</p><p>优点：代码简介 缺点：无法显示溢出部分   </p><p>\3. 父级添加after伪元素 4. 父级添加双伪元素   -2020.7.9    </p><p>​                            </p><h2 id="14-CSS定位"><a href="#14-CSS定位" class="headerlink" title="14. CSS定位"></a>14. CSS定位</h2><p>*作用和组成：</p><p><em><strong>*可以让盒子自由的在某个盒子内移动位置*</strong></em></p><p><em><strong>*或者固定屏幕中某个位置，并且可以压住其他盒子*</strong></em></p><p>组成：定位=定位模式+边偏移   </p><p>*定位模式：</p><p>position: static/relative/absolute/fixed 静态(默认)/相对/绝对/固定定位              </p><p>*边偏移：top bottom left right //定位的盒子移动到最终位置</p><p>​     //不同的定位参照点不一样</p><p><strong><em>*</em>*</strong>*<em><strong>*relative相对定位（重要）*</strong></em></p><p>​    position: relative;  相对于它原来位置(自恋型)</p><p>​    ****特点****：边偏移是参照自己原来位置/不脱标，继续保留原来位置   </p><p>​    应用：给绝对定位当爹（限制绝对定位）</p><p><strong><em>*</em>*</strong>*<em><strong>*absolute绝对定位（重要）*</strong></em></p><p>   相对于它有定位的祖先元素来说的(拼爹型)</p><p>   语法：position: absolute</p><p> ****特点****：绝对定位不再占有原位置（脱标）</p><p>以最近一级的有定位祖先元素为参考点移动位置(没有则以浏览器)</p><p><strong><em>*</em>*</strong>*<em><strong>*子绝父相*</strong></em></p><p>  父级需占有位置-相对的/子盒子不需占有位置-绝对的  </p><p><strong><em>*</em>*</strong>*****Fixed固定定位****（重要）</p><p>   position: fixed; 元素固定于浏览器可视区的位置。   </p><p>   使用场景：滚动时元素的位置不会改变。</p><p>   特点：以浏览器的可视窗口为参照点移动元素</p><p>不占有原先位置(脱标-可以看做特殊的绝对定位)  </p><p>*粘性定位（了解）</p><p>​     可以被认为是相对定位和固定定位的混合</p><p>​     语法：position: sticky; top:10px</p><p>—当元素距顶部10px变成固定定位</p><p>​     特点： 以浏览器可视化窗口为参照点移动元素（固定定位特点）</p><p>​         粘性定位占有原先位置（相对定位特点）</p><p>​       必须添加top、bottom、left、right其中一个才生效</p><p>   缺点：兼容性较差（一般用js实现粘性定位效果）</p><p>*定位叠放次序z-index</p><p>   只有定位的盒子才有这个属性，用于定位盒子间重叠情况</p><p>   z-index: 1;  //正负整数或0,数值越大,盒子约靠上</p><p>*定位的拓展</p><p><strong>1.</strong> ****绝对定位盒子居中算法****：</p><p>​    加了绝对定位的盒子不能通过margin: 0 auto水平居中</p><p>​      相对定位可以（它没有脱离标准流）</p><p>水平居中：</p><p>先走left: 50%（父级盒子宽度的一半）</p><p>再走margin-left: -px（负值，定位盒子宽度50%）</p><p>   垂直居中：先走top：50% 再走margin-top: -px</p><p>\2. 定位特殊性</p><p>​    绝对定位和固定定位和浮动类似</p><p>​     ①行内元素添加绝对或者固定定位，可以直接设置高度和宽度</p><p>②块级元素添加绝对或者固定定位，宽度高度默认是内容大小</p><p>\3. 脱标的盒子不会触发外边距塌陷</p><p>​    浮动元素、绝对定位（固定定位）元素都不会触发外边距合并问题</p><p>\4. 绝对定位（固定定位）会压住盒子</p><p>​    *浮动元素不同，只会压住它下面的标准流盒子</p><p>但是不会压住下面标准流盒子里的文字（图片）</p><p>​       *但是绝对定位（固定定位）会压住下面标准流盒子的全部内容</p><p>​       浮动压不住文字原因：</p><p>​             浮动最初目的是用来做文字环绕效果的，</p><p>​             文字会围绕浮动元素。</p><h2 id="15-元素的显示与隐藏"><a href="#15-元素的显示与隐藏" class="headerlink" title="15. 元素的显示与隐藏"></a>15. 元素的显示与隐藏</h2><p>本质：</p><p>让一个元素在页面中隐藏或显示出来</p><p>如：网站广告点击关闭及不见了，刷新重新出现</p><p>分类：  displa/visibility 显示隐藏</p><p>​    overflow溢出显示隐藏</p><p>（1）display属性（重点）</p><p>​     display: none;  隐藏对象</p><p>​     display: block;  除了转换为块级元素外，同时还有显示元素的意思</p><p>   <strong>display: none;隐藏元素后，不再占有原来位置</strong></p><p>   （后面应用及其广泛，搭配JS可以做很多网页特效）</p><p>（2）visibility可见性</p><p>   visibility: visible;  元素可视</p><p>   visibility: hidden; 元素隐藏   <strong>隐藏元素后继续占有原来位置</strong></p><p>（3）overflow溢出</p><p>   对溢出的部分进行显示/隐藏</p><p>   overflow: visible;   默认（将多余的显示出来）</p><p>   overflow: hidden;   将装不了的部分隐藏（溢出部分）</p><p>   overflow: scroll;   显示滚动条（不溢出也显示）</p><p>   overflow: auto;    在需要的时候添加滚动条（不溢出不显示）</p><p>   注：一般情况，我们都不想让溢出的部分显示出来，因为溢出部分会影响布局</p><p>​     但是如果有定位的盒子，请慎用overflow: hidden因为它会隐藏多余部分        </p><h2 id="16-CSS高级技巧"><a href="#16-CSS高级技巧" class="headerlink" title="16. CSS高级技巧"></a>16. CSS高级技巧</h2><p><strong>（1）</strong><em><strong>*精灵图*</strong></em></p><p>   目的：减少服务器接收和发送请求的次数,提高页面的加载速度</p><p>​    核心：将小背景整合到一张大图中,这样服务器只需一次请求就可 </p><p>​    使用：主要针对于小的背景图,主要借助于background-position来实现</p><p>​       一般都是负值(背景图片默认左上角)</p><p><strong>（2）</strong><em><strong>*字体图标iconfont*</strong></em></p><p>   使用场景：显示网页中通用的、常用的一些小图标   </p><p>   精灵图缺点：文件大,一旦制作更换非常复杂,放大缩小会失真</p><p>   字体图标解决了问题, 展示的是图标，本质属于字体</p><p>   适用于：结构和样式比较简单的小图标，用字体图标</p><p>​       复杂的小图标，用精灵图         </p><p>   使用： 国外<a href="http://www.icomoon.io/">http://icomoon.io</a>  阿里<a href="http://www.iconfont.cn/">http://www.iconfont.cn</a> </p><p>   使用步骤：将所有iconfont开头的文件放到新建font文件夹下 </p><p>​     引入font/iconfont.css并且在标签添加class(iconfont和对应类名) </p><p><strong>（3）</strong><em><strong>*CSS三角*</strong></em>    </p><p>   将盒子宽高设置为0，会出现四个三角</p><p>   将四个边框设置透明色=&gt;需要方向添加边框=&gt;并添加颜色</p><p>   div{width: 0;height: 0;border: 10px solid transparent;</p><p>​       border-left-color: pink;}</p><p>应用：在盒子上加三角（子绝父相加三角）</p><p><strong>（4）</strong><em><strong>*CSS用户界面样式*</strong></em></p><p>​     更改一些用户操作，以便提高更好的用户体验</p><p>​     更改用户的鼠标样式/表单轮廓/防止表单域拖拽</p><p>*鼠标样式 cursor: default/pointer/move/text/not-allowed</p><p>​        //小白(默认) 小手 移动 文本 禁止</p><p>*表单轮廓outline  添加input{outline: none/0;}</p><p>​      //光标定到text中，会有蓝色轮廓线，通常情况去掉     </p><p>*防止拖拽文本域resize: textarea{resize: none;}</p><p>​     默认文本域右下的三角-可以拖动-影响布局</p><p>文本域尽量放到一行，不然中间有空格</p><p><strong>（5）</strong><em><strong>*vertical-align*</strong></em></p><p>   设置元素垂直对齐方式(只对行内元素有效)</p><p>   <img src="file:///C:\Users\ADMINI~1\AppData\Local\Temp\ksohtml1868\wps2.jpg" alt="img"></p><p>   text-align-设置给父元素  vertical-align-谁对齐设置给谁  </p><p>默认情况图片和文字基线(最短文字下端)对齐</p><p>vertical-align: baseline/top/bottom/text-top/text-bottom//middle</p><p>//文字基线 盒子顶部/底部 文字顶部/底部/中线</p><p> (中线不是正中间,而是基线往上四分之一)     </p><p><strong>（6）</strong><em><strong>*溢出的文字省略号显示*</strong></em></p><p>   *单行文本溢出显示省略号</p><p>   white-space: nowrap; overflow: hidden; text-overflow: ellipsis;</p><p>​    //先强制一行内显示文本(默认normal自动换行)</p><p>​     超出的部分隐藏,文字用省略号替代超出的部分              </p><p>   *多行文本溢出显示省略号  </p><p><strong>（7）</strong><em><strong>*常见布局技巧*</strong></em></p><p>   *margin负值的运用-浮动的相邻盒子中间边框会加粗-用margin: -1px</p><p><strong><em>*</em> CSS3边框和渐变*</strong>*</p><p> ****边框圆角****：border-radius: px  //可以数值或百分比</p><p>​     //上右下左,数值/百分比为半径画圆弧</p><p>注意：当边框圆角值&gt;边框宽度, 内/外边框都会变成圆角</p><p>​        圆角值&lt;=边框宽度,外边框圆角,内边框直角</p><p>  border-top-left-radius //单独设置某个角的值</p><p>​           //两个参数: 水平数值,垂直数值(可以一个值)</p><p><em><strong>*边框图片：border-image*</strong></em></p><p>   border-image-source: url()  //默认将图片放边框四个顶点</p><p><em><strong>*渐变*</strong></em></p><p><em><strong>*线性渐变*</strong></em>(默认从上到下) to关键字</p><p>background: liner-gradient(to可省略,red,green) //red-&gt;green</p><p>//默认从上到下渐变,第一个参数: to top/to left/to right</p><p>可以斜着渐变：to top right  也可度数: 45deg</p><p>注意：至少传递两个颜色,没有上限</p><p>   默认系统自己计算纯色和渐变色范围</p><p> 手动:liner-gradient(to right,red 100px,green 200px,…) //颜色 范围</p><p> //除了第一个指定的是纯色的范围,后面都是渐变(100-200渐变)</p><p>*将背景裁剪为文字的形状：-webkit-background-clip: text;</p><p> 私有属性: -ms/-moz/-webkit/-o 特定浏览器识别 ie/火狐/谷歌</p><p><em><strong>*镜像渐变*</strong></em>(默认中间往四周) at关键字</p><p>   background: radial-gradient(at top left,red,green) //左上角到四周渐变</p><p>   //某个点开始镜像渐变(at 200px 100px,red,green)</p><p>   //控制扩散范围(100px,red,green) </p><p>   //同时指定扩散位置和范围 (100px at 200px 100px,red,green)</p><p>​                             2021.4.26</p><h2 id="17-CSS3新特性"><a href="#17-CSS3新特性" class="headerlink" title="17. CSS3新特性"></a>17. CSS3新特性</h2><p>新增选择器/盒子模型以及其他特征(IE9+支持)</p><p><strong>1.0  CSS3新增选择器</strong></p><p><strong>a. 属性选择器</strong></p><p>E[属性] E[属性=”val”]  选择属性/属性值val的元素</p><p>E[属性^=”val”] E[属性$=”val”] E[属性*=”val”]</p><p>  选择E且val开头/结尾/包含val的元素</p><p>注：类选择器，伪类选择器，属性选择器权重都是10  ([]权重为10)  </p><p><strong>b. 结构伪类选择器</strong> <img src="file:///C:\Users\ADMINI~1\AppData\Local\Temp\ksohtml1868\wps4.jpg" alt="img"></p><p><strong>nth-child(n)选择器</strong></p><p> -n可以是数字/关键字/公式</p><p> -数字就是选择第n个子元素 关键字：even偶/odd奇数</p><p> -公式(n都是从0开始) </p><p>nth-child(n)-选择所有孩子(只能写n)</p><p>2n偶数 2n+1 奇数  5n  5 10 15…</p><p>n+5 从第五个开始(包含五)  -n+5 前五个(包含五) n必须在前</p><p><strong>nth-child(n)和nth-of-type(n)区别</strong></p><p>  nth-child(n)</p><p>-会把****所有孩子****排序，执行时先看n找到第n个孩子，再看前面div</p><p>​     -如果第n个元素和前面的div匹配则执行，否则不执行</p><p>  nth-of-type(n)  ****指定孩子****排序(执行时先看div)</p><p>​         再看n，选择排好序的第n个盒子</p><p>注：:nth-child(n)权重为10</p><p><strong>c. 伪元素选择器</strong></p><p>可以利用CSS创建新标签元素,而不需要HTML标签，简化结构</p><p>::before  在元素内部的前面插入内容</p><p>::after  在元素内部的后面插入内容</p><p> 注意：before/after创建的元素都属于行内元素</p><p>​    新创建的元在文档树中是找不到的-称为伪元素</p><p>​    语法： element::before{}</p><p>​    before/after必须有content: “”;</p><p>​    权重为1(和标签选择器一样)</p><p><strong>使用场景:</strong></p><p> 伪元素清除浮动</p><p>   *额外标签法(隔墙法) -会额外增加标签</p><p>​      父盒子中最后插入一个空的块级元素并 clear:both</p><p>   *父级添加overflow: hiddle;</p><p>   (后面两种伪元素清除浮动算是额外标签法的升级和优化)</p><p>   *父级添加after伪元素(推荐)</p><p>​    .clearfix:after{</p><p>content: “ ”;display: block;clear: both;}</p><p>   *父级添加双伪元素(推荐)</p><p>​     .clearfix:before,.clearfix:after{</p><p>content: “”;  display: table; }</p><p>​      .clearfix:after{clear: both;}</p><p><strong>1.1 CSS3盒子模型border-box</strong></p><p>box-sizing: content-box/border-box</p><p>content-box===width+padding+border(默认)</p><p> border-box ===width(padding和border不会撑大盒子)</p><p>*{ padding: 0;margin: 0;box-sizing: border-box; }</p><p><strong>1.2 其他特性（了解）</strong></p><p>  <strong>图片变模糊</strong></p><p>​    滤镜filter -可以将图片模糊或颜色偏移</p><p>​    -filter: 函数()  如：filter: blur(5px); //数值越大越模糊</p><p>   <strong>计算盒子宽度width: calc函数</strong></p><p>​    -calc()此CSS函数让你在声明CSS属性值时执行一些计算</p><p>​    -width: calc(100% - 80px);  +-*/中间用空格隔开</p><p><strong>1.3  CSS3过渡（重点）</strong></p><p>  <strong>transition(过渡)</strong></p><p>   -从一个状态渐渐的过渡到另一个状态(常和hover一起搭配)</p><p>   -transition: 要过渡的属性 花费时间 运动曲线 何时开始;</p><p>   -过渡属性: 宽度高度/背景颜色/内外边距都可 all(所有)</p><p>   -时间: s(必须)  运动曲线: 默认ease(可省)  何时开始: s (可省)</p><p>  口诀：谁做过渡给谁加</p><p>   -多个属性可用逗号进行分割(all) 如: transition: width 2s,height 2s;</p><p>注：使用transition必须写初始状态否则不起作用，即使是left也要写left: 0;</p><p>​                                  -2020.9.26</p><p> <strong>2.1  2D转换</strong></p><p>转换(transform)</p><p> -移动(translate)/旋转(rotate)/缩放(scale)</p><p><strong>移动translate</strong>   </p><p>-可以改变元素位置，类似定位，移动位置还有margin</p><p>   -transform: translate(x,y);  x,y的坐标，单位px或百分比</p><p>​    transform: translateX(n);/translateY(n);  只移动x/y    </p><p>   -优点：不会影响到其他元素(类似相对定位)</p><p>   -注：translate中百分比单位是相对于自身元素的,行内元素不起作用</p><p>   <strong>应用-盒子水平垂直居中</strong>：</p><p>​    position: absolute;  加定位，父元素加相对定位</p><p>​    left: 50%; top: 50%; transform(translate(-50%,-50%))</p><p> <strong>旋转rotate</strong></p><p>-二维平面顺时针或逆时针旋转</p><p>-语法：transform: rotate(度数) </p><p>​    -重点：单位deg,角度正-顺时针转, 角度负-逆时针转       </p><p>​    -旋转中心点：transform-origin: x y; 默认(50% 50%)</p><p>​    可以设置百分比/像素px/方位名词(top bottom left right center)</p><p>  <strong>缩放scale</strong></p><p>​    -控制放大和缩小</p><p>​    -语法：transform: scale(x,y);  x,y修改的宽和高-倍数  </p><p>​    -注意：参数不跟单位-倍数,小于1就是缩放(可小数)</p><p>​       若只有一个参数则宽高同时修改n倍</p><p>​    -优点：不会影响其他盒子，且可以设置缩放中心点transform-origin</p><p>​       (原来的直接改变宽高会影响其他盒子)</p><p>  <strong>2D转换综合写法</strong></p><p>​    -transform: translate() rotate() scale();  空格隔开</p><p>   -顺序会影响转换效果，当有位移和其他属性时，必须把位移放到最前</p><p><strong>2.2动画animation</strong></p><p>-相比于过渡，动画可以实现更多变化，控制，连续自动播放等效果</p><p>-基本使用：定义动画=&gt;使用(调用)动画</p><ol><li>定义动画-@keyframes</li></ol><p>  @keyframes 动画名称{</p><p> 0%{ width: 100px;}</p><p>  100%{ height: 100px;}}  </p><p>0%/100%叫动画序列，也可用from/to</p><p>可以改变任意多的样式和次数</p><ol start="2"><li>使用动画</li></ol><p> animation-name: 动画名称  animation-duration: 持续时间</p><p>​     (这两个必须同时使用才生效)</p><p>  <strong>可以做多个状态的变化</strong></p><p>​    有几个状态变化可分几个百分比，自动根据百分比分配时间</p><p>如：@keyframes move{0%{…}25%{…}50%{…}75%{…}100%{…}}</p><p>​    其中0%可写也可不写也可为空</p><p>  <strong>动画常见属性</strong></p><p>​    @keyframes/animation 规定动画  简写属性(除了animation-play-state)  </p><p>​    animation-name/animation-duration/animation-timing-function</p><p>动画名称(必须)/持续时间(必须) s或ms/运动曲线，默认ease</p><p>animation-delay/animation-iteration-count</p><p>规定动画何时开始(默认0s)  播放次数(默认1,infinite-无限次)</p><p>​    animation-direction /animation-fill-mode/ animation-play-state</p><p>是否逆向播放alternate逆播放，默认normal</p><p>​    动画结束状态  保持forwards 回到初始backwards(默认)</p><p>​    鼠标放上去是否停止-默认running ,pause(加在hover)</p><p>  <strong>动画属性简写</strong></p><p>   animation: 名称 持续时间 运动曲线 何时开始 播放次数 是否逆向 起始结束状态  </p><p>   （前面两个一定要写）                 2020.9.27                                 </p><p>  -速度曲线细节 </p><p>animation-timing-function: 规定动画运动曲线，默认ease</p><p>​    ease/linear  动画低速开始-然后加快-结束时变慢/匀速    </p><p>ease-in/ease-out/ease-in-out 低速开始/低速结束/低速开始和结束  </p><p>​    steps()  时间函数中的间隔数量步长-动画需要多少步完成</p><p>​      </p><p><strong>2.3 3D</strong></p><p>​    ****三维坐标系****：</p><p>​       x轴-右正左负/y轴-下正上负/z轴-往外正往里负       </p><p>​    主要知识点：</p><p>​       3D位移：translate3d(x,y,z)  3D旋转：rotate3d(x,y,z)</p><p>​       3D呈现：transform-style  透视： perspective     </p><p>​    <strong>3D位移(移动)：</strong></p><p>​      transform: translateX(100px)/translateY()/ translateZ() 仅在x/y/z轴移动 </p><p>​      综合：transform: translateX() translateY() translateZ();</p><p>​         transform: translate3d(x,y,z) 简写方式(x,y,z不能省略，没有用0表示)</p><p>​    <strong>透视 perspective</strong></p><p>​    -透视写在被观察元素的父盒子上,单位是像素px</p><p>​         -透视也称为视距，是模拟眼睛到屏幕的距离，数值越小，看到的越大</p><p>​         -z轴是物体距屏幕的距离，z轴越大，看到的物体越大</p><p>​    <strong>3D旋转rotate3d</strong></p><p>​     transform: rotateX(45deg)/ rotateY(45deg)/rotateZ(45deg)  </p><p>x/y/z轴正方向旋转45</p><p>​     综合: transform: rotate3d(x,y,z,45deg) 自定义轴旋转（了解）</p><p>​     左手定则-判断x，y，z正方向-大拇指值正方向，四指弯曲是正方向</p><p>​    <strong>3D呈现 transform-style(重要)</strong></p><p>​     transform-style: preserve-3d 开启立体空间(默认flat不开启)</p><p>​     -控制子元素是否开启三维立体环境(代码给父级,影响的是子盒子)  </p><p><strong>其他一些日常总结</strong></p><p><strong>锚点链接和书签链接</strong></p><p>  锚点链接：<a href="#名称1"></a>  <h3 id="名称1"></h3></p><p>  书签链接：<a href=”#名称2”></a>  <a name=名称2”></a></p><p>  跨页面跳转:<a href=”xxx.html#名称1”></a> 用id/name都可</p><p> 总结：锚点链接可以链接到任何标签，书签链接只能从a到a</p><p><strong>背景</strong></p><p>  -新增background-size 背景图片大小(单独写在复合属性后面)</p><p>-值可以为具体值/auto cover contain           2020.9.29                          </p><p><strong>最大最小宽度</strong>   min-width/max-width 可以给body设置  </p><p>​    通过设置width: 100%+flex 达到移动端缩小宽度     </p><p><strong>html/body标签</strong></p><p>  html/body都遵循块元素特征(默认宽度浏览器宽度,高度0)</p><p>  当都不指定高度时,浏览器背景优先捕获html(html没有选择body)</p><p>  当指定了html/body高度,body背景色会覆盖html的</p><p><strong>对齐总结</strong></p><p> text-align 行内元素居中-文本/图片/input(写在文本的父元素里面) </p><p> margin: 0 auto  块级元素居中(写在居中元素上/需要设置宽度才能居中)  </p><p> line==line-height  单行文本垂直居中</p><p>position: absolute; left:50% top:50%  transform: translate(-50%,-50%)/margin: -px </p><p>  //绝对定位元素垂直水平居中(父元素加相对定位) </p><p> margin-top/left: 50%  transform: translate(-50%,-50%); //和以上方法原理一样,不需定位</p><p> display: flex  justify-content: center  align-items:center  //弹性布局居中</p><p><strong>margin百分比</strong>  相对于父元素的</p><p><strong>实战总结</strong></p><p> 项目名称和子文件夹名称不用中文</p><p> 编写网页应该从外到内,从上到下的编写,先搭建好基本外形,再填东西</p><p> reset.css/normalize.css  初始化样式(reset去掉了所有默认样式,normalize部分样式)</p><p> base.css  用于存放自己一些使用频率多的样式(清除浮动,左浮,右浮)</p><p> index.css  全局样式(用于当前页面样式)</p><p>注意：别人的样式放前面,自己的放后面(方便自己覆盖别人的)    2021.4.28       </p><p><strong>实战问题</strong></p><p> 父元素使用绝对定位居中,子元素使用transform: scale() =&gt;子盒子位置下移        </p><p>   解决方法：使用margin-left: -px(不使用translate)</p><p> 图片应该作背景图片还是直接image标签/怎样让图片居中显示不失真</p><p>   除了很小的图标/超大背景图-使用背景图片</p><p>奇淫技巧：当父盒子中image宽度超出父盒子,想让图片居中显示</p><p>​     图片设置margin: 0 -100%/父元素设置text-align: center</p><p>​     (一般高度100%,宽度等比缩放)</p><p>​     也可给父元素设置相对定位,子元素绝对定位left50%,translatex</p><p> 给元素设置hover并且设置transition过渡,但是不能设置鼠标离开过渡</p><p>   谁过渡给谁加-不加在hover中(否则只有鼠标放入有变化)</p><p>​                                2021.5.1</p><p>object-fit: contain/cover  //用于img/video 保留原始比例的剪裁、缩放、拉伸等</p><h2 id="18-布局相关"><a href="#18-布局相关" class="headerlink" title="18. 布局相关"></a>18. 布局相关</h2><p><strong>伸缩布局</strong>(弹性布局)</p><p> display: flex  给父盒子添加flex属性，来控制子盒子的位置和排列方式</p><p>伸缩容器-设置display: flex的元素  伸缩项-伸缩容器子元素</p><p>主轴-默认水平方向 伸缩容器最左端-&gt;最右    </p><p>侧轴-默认垂直方向 伸缩容器最顶部-&gt;最底部</p><p> <strong>flex-direction</strong>(主轴方向)</p><p>flex-direction: row/row-reverse/column/column-reverse</p><p>主轴左起点(默认)/右起点/顶部/底部</p><p>注意：主轴侧轴始终十字交叉(主轴改为垂直,那么侧轴变为水平)</p><p> <strong>justify-content</strong>(主轴对齐方式)</p><p>   justify-content: flex-start/flex-end/center/space-between/space-around</p><p>   与主轴起点对齐(默认)/终点对齐/中间对齐/两端对齐/环绕对齐</p><p> <strong>align-items/align-self</strong>(侧轴对齐方式)</p><p>   align-items: flex-start/flex-end/center/baseline/stretch</p><p>   与主轴起点对齐(默认)/终点对齐/中间/基线对齐/拉伸对齐(拉伸为侧轴高度)</p><p>注意: 设置拉伸对齐,伸缩项不能设置高度,否则会失效</p><p>align-self:flex-start/flex-end…  //取值一样,控制某个伸缩项,写到伸缩项中</p><p> <strong>flex-wrap/align-content</strong>(换行和换行对齐)</p><p>   默认情况伸缩容器不会换行,放不下会等比压缩伸缩项</p><p>   flex-wrap: nowrap/wrap/wrap-reverse  不换行(默认)/换行/换行反转  </p><p>  换行对齐  只有伸缩项发生换行这个属性才有效</p><p>   align-content: flex-start/end-start/center/space-between/space-around</p><p> 侧轴起点对齐/终点对齐/居中/两端对齐/环绕对齐</p><p> 注意：默认拉伸对齐-stretch</p><p><strong>order</strong>(伸缩项排序)</p><p>   添加给伸缩项,每一个伸缩项都有一个order属性-默认为0</p><p>   order: 0;  //从小到大,数字越大排在越后面,可以为负</p><p><strong>flew-grow</strong>(伸缩项扩充)</p><p>  flew-grow: 0;  //默认为0-不需扩充,值越大所占份数越多</p><p>  //用于使伸缩项宽度总和填满整个伸缩容器</p><p>  注意: 当所有伸缩项宽度总和小于伸缩容器宽度时才有效</p><p><strong>flex-shrink</strong>(伸缩项缩小)</p><p>  当伸缩项宽度和&gt;伸缩容器宽度,默认不换行,会等比缩放伸缩容器</p><p>  flex-shrink: 1;  //默认是1  0-超出伸缩容器也不缩小</p><p>   注意: 当所有伸缩项宽度总和大于伸缩容器宽度时才有效  </p><p> *伸缩项扩充缩小注意点</p><p>   没有指定/flex-grow:0;  不会被扩充</p><p>   flex-shrink: 0;  当前伸缩项不会被缩小</p><p>   扩充和缩小可以是高度或宽度,由主轴决定的,扩充缩小的是主轴上的</p><p> <strong>flex-basis</strong>(伸缩项宽度设置)</p><p>   flex-basis: px  //设置伸缩项的宽度,伸缩布局中才有用,默认auto</p><p>   通过flex-basis设置了宽度,width就无效</p><p> <strong>flex</strong>(伸缩项属性连写)</p><p>   flex: 扩充 缩小 宽度;  默认：flex: 0,1,auto  flex: 1===flex: 1,1,0</p><p><strong>圣杯布局和双飞翼布局</strong></p><p>  两边宽度不变,中间自适应的三栏布局</p><p> *圣杯布局</p><p>搞一个容器,里面放三个盒子</p><p>设置两侧盒子宽度(固定)</p><p>设置中间盒子宽度等于容器的宽度(100%)</p><p>设置容器的左右padding等于两侧盒子的宽度 padding: 0 px;</p><p>三个盒子都在同一方向上浮动 </p><p>设置左边盒子margin-left: -100%  通过定位调整位置使其不盖住中间区域</p><p>设置右边盒子margin-left: -px   通过定位调整位置使其不盖住中间区域</p><p>给容器设置最小宽度,防止缩小变形  min-width: px;</p><p> *双飞翼布局</p><p><strong>响应式布局</strong>(媒体查询)</p><p> 媒体查询：</p><p>响应式网页-不同的设备上呈现出不同样式</p><p>css3新增媒体查询-获取宽度后,根据不同浏览器的宽度设置不同的样式</p><p>注意点：不适合比较复杂的网页</p><p> 基本使用：</p><p>内联格式 </p><p>@media 条件{}   //如果条件满足就执行{}代码</p><p>  条件screen and (min-width/max-width: px){}  //screen代表电脑/手机/平板屏幕</p><p>外链格式(推荐)  </p><p>link标签新增media=”条件” //只有满足条件才会执行css文件 </p><p>  注意：给电脑平板和手机设置样式,顺序是电脑&gt;平板&gt;手机</p><p> 编写响应式网站步骤: 编写pc样式=&gt;编写平板样式,通过相同选择器覆盖不同样式</p><p>​           =&gt;编写手机样式,通过相同选择器覆盖不同样式</p><p>​     </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HTML详解</title>
    <link href="/2022/01/19/html/"/>
    <url>/2022/01/19/html/</url>
    
    <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="基本的HTML5文档结构"><a href="#基本的HTML5文档结构" class="headerlink" title="基本的HTML5文档结构"></a>基本的HTML5文档结构</h2><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>  //h5文档声明<br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span> //language-指定语言(en-英文 zh-中文) 帮助翻译工具确定要使用的翻译规则<br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>           //如果为en 浏览器设置为中文，就会提示是否翻译网页<br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  //所有网页必须都用UTF-8,否则解码可能会出乱码问题<br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>head： 内容是一些’’元数据’’-描述网页的信息， 如：网页标题、图标、字符编码</p><p>有：meta、title、style、link、script、noscript</p><p>link-css样式引入、网页图标</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;link rel=<span class="hljs-string">&quot;stylesheet&quot;</span> href=<span class="hljs-string">&quot;style.css&quot;</span>&gt;<br>&lt;link rel=<span class="hljs-string">&quot;shortcut icon&quot;</span> href=<span class="hljs-string">&quot;favicon.ico&quot;</span> type=<span class="hljs-string">&quot;image/x-icon&quot;</span>&gt;<span class="hljs-comment">//type可不加</span><br><span class="hljs-comment">//href: hyper reference(超链接) </span><br></code></pre></td></tr></table></figure><p>body：网页的具体内容和结构</p><p>所有标签共有的属性：class、id、title</p><h2 id="1-标题-段落-换行-字符实体"><a href="#1-标题-段落-换行-字符实体" class="headerlink" title="1. 标题/段落/换行/字符实体"></a>1. 标题/段落/换行/字符实体</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>    //h1-h6大-&gt;小<br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>      //段落(pragma)标签 间隔大<br><br><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span>       //换行(break)标签 间隔小<br></code></pre></td></tr></table></figure><p>注：为什么标签有单/双之分?      因为有的标签不需要内容，如br换行作用</p><h3 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h3><p>SEO：搜索引擎优化(Search Engine Optimization)</p><p>百度、搜狗、Google</p><p>h元素有助于网站的SEO优化，可以促进关键词排名</p><p>建议：在一个网页中最多只有一个h1元素（否则会被搜索引擎认为作弊）</p><h3 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-symbol">&amp;nbsp;</span>    //空格<br>text-index: 2em;  //段前缩进<br><br><span class="hljs-symbol">&amp;lt;</span> <span class="hljs-symbol">&amp;gt;</span> //&lt; &gt;符号 less than/great than<br><span class="hljs-symbol">&amp;amp;</span>  //&amp;符号<br><span class="hljs-symbol">&amp;yen;</span>  //￥符号<br><span class="hljs-symbol">&amp;copy;</span> //版权<br><span class="hljs-symbol">&amp;reg;</span>  //注册商标<br><span class="hljs-symbol">&amp;quot;</span> //双引号，在双引号中使用双引号就需要字符实体<br><br><span class="hljs-comment">&lt;!--   --&gt;</span>   //注释<br><br></code></pre></td></tr></table></figure><h2 id="2-文本格式化标签"><a href="#2-文本格式化标签" class="headerlink" title="2. 文本格式化标签"></a>2. 文本格式化标签</h2><p>文字粗体、斜线、下划线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">s</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">s</span>&gt;</span>   删除线<br><span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>下划线<br></code></pre></td></tr></table></figure><h2 id="3-盒子标签-用于布局"><a href="#3-盒子标签-用于布局" class="headerlink" title="3. 盒子标签(用于布局)"></a>3. 盒子标签(用于布局)</h2><p> div/span  独占一行/一行多个</p><h2 id="4-图像标签和路径"><a href="#4-图像标签和路径" class="headerlink" title="4. 图像标签和路径"></a>4. 图像标签和路径</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;</span>    //image缩写/单标签/宽或高设置一个另一个自适应<br></code></pre></td></tr></table></figure><p>src/alt/title  路径/替换文本/提示文本   src-source</p><p>相对路径(图片相对于html文件位置)  / ./ ../</p><p>绝对路径：完整路径-电脑/网络路径(不推荐)</p><p>png、jpg、gif   静态支持透明/静态不支持透明/动态支持透明</p><h2 id="5-超链接标签"><a href="#5-超链接标签" class="headerlink" title="5. 超链接标签"></a>5. 超链接标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self/_blank&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    //_self(当前,默认)  _blank新窗口<br>//链接分类<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.html&quot;</span>&gt;</span>  //外部链接/内部链接-html跳转<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:void(0);&quot;</span>&gt;</span>   //空链接、伪链接<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;html.txt&quot;</span>&gt;</span>                           //下载链接-地址链接的是文件   <br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#cth&quot;</span>&gt;</span>锚点链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cth&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>   //锚点链接：快速定位到文本中某个位置<br><br>    <br>//base元素可以指定a链接的基本前缀-会在没有前缀时自动加上    <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://baidu.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span> //可以指定基地址和target<br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span>&gt;</span>百度Logo<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> //自动拼接<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com&quot;</span>&gt;</span>百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> //当有协议头时就不会拼接<br></code></pre></td></tr></table></figure><p> <strong>注意：</strong>两种空链接方法 区别：跳到顶部/死链接</p><p> 扩展：target其他值扩展：_parent   _Top  iframe的name属性（三个属性都必须和iframe一起使用才有效果）</p><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p>URL-Uniform Resource Locator（统一资源定位符）</p><p>URL是资源的地址，网络上每个资源都有唯一的一个URL</p><p>基本格式：protocol://hostname/path   协议://主机地址/路径</p><p>更具体的格式：protocol://hostname[:port]/path/[;parameters][?query]#fragment</p><p>​     protocol-http/https/ftp/file   hostname-host.domain(host-www domain-域名) 主机地址  </p><p>​     port：端口号不写默认80    query：请求参数     fragment：锚点链接</p><p>​      </p><p>​                                                                                                                                   </p><h2 id="6-表格标签"><a href="#6-表格标签" class="headerlink" title="6. 表格标签"></a>6. 表格标签</h2><p>（1）作用：展示数据</p><p>（2）基本语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>    //table-表格  tr-行(table row)  td-单元格内容(table data)<br><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头单元格文字<span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>  //th-表头单元格标签(table head居中和加粗显示，一般位于第一行或第一列)<br><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>单元格内文字<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>表格属性：（了解）以下属性都加在table里面</p><p> align-表格位置（left-默认/center/right） border-边框(默认无, 1-有)  hidth/height</p><p> cellpadding-单元格与内容（默认1像素）cellspacing-单元格之间（默认2像素）</p><p>（3）表格结构标签（将tr 包含起来）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>标签-表格头部  <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span>标签-表格主体<br></code></pre></td></tr></table></figure><p>（4）合并单元格</p><p> 合并单元格方式：</p><p>   跨行：rowspan=”合并个数”  跨列：colspan=”合并个数”</p><p> 目标单元格：</p><p> 跨行：最上侧单元格（写合并代码）</p><p> 跨列：最左侧单元格（写合并代码）</p><p>合并步骤：（三部曲）</p><p>  确定跨行还是跨列-&gt;找到目标单元格写合并方式-&gt;删除多余单元格</p><h2 id="7-列表标签-用于布局）"><a href="#7-列表标签-用于布局）" class="headerlink" title="7. 列表标签(用于布局）"></a>7. 列表标签(用于布局）</h2><p>分类：无序/有序/自定义列表</p><p><strong>无序列表（重点）</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>   //没有顺序,每一项前面小黑点(list-style: none  去掉小黑点)<br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>   //ul中只能放li标签\****，***\*li里面可以任何标签<br>    ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p> <strong>有序列表（理解）</strong></p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>   //有顺序，每一项前序号123,ol只能放li<br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>自定义列表（重点）</strong>   </p><p>   上面一个小标题-下面多个列表解释说明（大哥和多个弟弟）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>名词1<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词1解释1<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>...  //dl只能有dt和dd<br><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>名词2<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词2解释1<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>...//可以有多组，一组都多个兄弟dd解释一个大哥dt<br><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="8-表单标签"><a href="#8-表单标签" class="headerlink" title="8. 表单标签"></a>8. 表单标签</h2><h3 id="8-1-介绍"><a href="#8-1-介绍" class="headerlink" title="8.1 介绍"></a>8.1 介绍</h3><p>使用表单标签目的：收集用户信息（一般用于注册页面）</p><p>组成：由表单域、表单控件-元素、提示信息 组成</p><h3 id="8-2-表单域（了解）"><a href="#8-2-表单域（了解）" class="headerlink" title="8.2 表单域（了解）"></a>8.2 表单域（了解）</h3><p> 作用：将表单域范围内的表单元素信息送到服务器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">”url”</span> <span class="hljs-attr">method</span>=<span class="hljs-string">”get/post”</span> <span class="hljs-attr">name</span>=<span class="hljs-string">””</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>//url：用于接收的服务器url地址<br>//method：表单数据提交方式-get/post<br>//name：用于指定表单名称，以区分同一页面多个表单域<br></code></pre></td></tr></table></figure><h3 id="8-3-表单控件（表单元素）"><a href="#8-3-表单控件（表单元素）" class="headerlink" title="8.3 表单控件（表单元素）"></a>8.3 表单控件（表单元素）</h3><p>三种类型：input/select/textarea  </p><p><strong>Input</strong></p><p>输入表单元素（单标签）</p><p>作用：用于收集用户信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;属性值&quot;</span>&gt;</span>    //type必须属性<br></code></pre></td></tr></table></figure><p>type属性值：text/password/radio/checkbox/file/button/submit/reset</p><p>文本框/密码框/单选按钮/复选框/上传文件/普通按钮/提交按钮 /重置按钮  </p><p>注意：按钮通过value设置按钮提示文字</p><p>常用属性：     </p><p>​    name：（表单元素名字，每个表单原始名字不一样）</p><p>​       radio和checkbox中name必须一样</p><p>​    value:（表单元素值）</p><p>​        针对于后台人员使用（返回数据） 规定input元素的值</p><p>​     checked：（默认给单选按钮或者复选框选中）</p><p>​         checked=”checked” 单选框只能加一个，复选框可以加多个。</p><p>​     maxlength: (正整数) 输入字符的最大长度</p><p>​         </p><p>  label标签（和表单元素搭配使用）</p><p>​    作用：点击label标签内的文字,选择对应表单元素(增加用户体验)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;sex&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sex&quot;</span> /&gt;</span>  //for的值必须和id值必须相等<br></code></pre></td></tr></table></figure><p><strong>select下拉表单元素</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>选项1<span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>....<span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span>  //selected=”selected” 默认选项<br></code></pre></td></tr></table></figure><p>​       </p><p><strong>textarea文本域元素</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">”3”</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">”20”</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>  //  //css中直接设置宽和长,不使用rows/cols<br></code></pre></td></tr></table></figure><p>-2020.7.4</p><p> 补充：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet/icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>//外部样式表 网页小图标<br></code></pre></td></tr></table></figure><p>button与input创建按钮区别：</p><p>button标签内容可以是图片和文本,input需通过value设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  //注意 需加上type-不同浏览器默认值不同<br></code></pre></td></tr></table></figure><h2 id="9-其他"><a href="#9-其他" class="headerlink" title="9. 其他"></a>9. 其他</h2><p>  script/noscript link style meta hr iframe </p><h3 id="不常用标签"><a href="#不常用标签" class="headerlink" title="不常用标签"></a>不常用标签</h3><p>code：设置等宽字体，相对于css   font-family:monospace(一般用span然后加上这个样式)</p><p>hr：分割线（不常用，一般用div代替）</p><p>pre：对文字按照原来的格式显示，比如空格、换行</p><h1 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h1><p><strong>新增标签</strong>（IE9+以上浏览器支持）</p><h2 id="1-新增的语义化标签"><a href="#1-新增的语义化标签" class="headerlink" title="1. 新增的语义化标签"></a>1. 新增的语义化标签</h2><p>header头部  nav 导航  article 内容</p><p>section 定义文档某个区域  aside侧边栏   footer尾部</p><p> <img src="file:///C:\Users\ADMINI~1\AppData\Local\Temp\ksohtml1868\wps3.jpg" alt="img"></p><p>注：主要针对搜索引擎/可以多次使用/IE9中需要转化为块级元素</p><h2 id="2-新增的多媒体标签"><a href="#2-新增的多媒体标签" class="headerlink" title="2. 新增的多媒体标签"></a>2. 新增的多媒体标签</h2><p>(谷歌把音频和视频自动播放静止了)</p><p>音频标签：audio  视频标签：video</p><p><strong>视频 video</strong></p><p>-支持MP4 WebM Ogg（尽量使用mp4）</p><p>-语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">controls</span>=<span class="hljs-string">&quot;controls&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p>src 路径  autoplay自动播放（谷歌需要添加muted=”muted”解决）       controls播放控件  loop循环播放(loop=”loop”)以上都是</p><p>width/height 宽高  preload:auto/none预先加载(有autoplay忽略) </p><p>poster  等待的画面图片(视频播放前)</p><p>兼容写法: </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;.mp4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;.0gg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p>   <strong>音频 audio</strong></p><p> -所有浏览器都支持MP3（部分Wav Ogg）</p><p> -语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">controls</span>=<span class="hljs-string">&quot;controls&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><p> -属性：src  autoplay  controls  loop</p><h2 id="3-新增input表单"><a href="#3-新增input表单" class="headerlink" title="3. 新增input表单"></a>3. 新增input表单</h2><p>type=”email/url/date/time/month/week/number/tel/search/color”</p><p>(以下属性加入from表单后，加入submit提交按钮，点击会验证输入是否正确)</p><h2 id="4-新增表单属性"><a href="#4-新增表单属性" class="headerlink" title="4. 新增表单属性"></a>4. 新增表单属性</h2><p>required 不为空(required=”required”)</p><p><strong>placeholder</strong> 提示信息(placeholder=”文字内容”)</p><p>autofocus 自动聚焦(autofocus=”autofocus”)</p><p>autocomplete 默认on打开/关闭用”off”(有name属性并成功提交才生效)</p><p>​    -当用户输入时显示用户之前输入的记录</p><p><strong>multiple</strong> 多选文件(multiple=”multiple”)</p><p>  PS: 可通过input::placeholder{color:pink;}修改里面文字颜色</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端学习路线</title>
    <link href="/2022/01/18/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <url>/2022/01/18/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="前端学习路线"><a href="#前端学习路线" class="headerlink" title="前端学习路线"></a>前端学习路线</h1><blockquote><p>这份学习路线并不完美，也不会有最终形态，正如前端不可预见、永无止境的未来。</p></blockquote><p>💂 + 💻 = 👴🏽</p><p>建议先观看视频导读：<a href="https://www.bilibili.com/video/BV1nh411e7oG/">https://www.bilibili.com/video/BV1nh411e7oG/</a></p><h2 id="路线特点"><a href="#路线特点" class="headerlink" title="路线特点"></a>路线特点</h2><ol><li>一份全面的前端知识点大梳理和汇总</li><li>分阶段学习，每个阶段给出学习目标</li><li>使用符号对知识点的重要程度做了区分，按需学习</li><li>知识点附有描述和资源链接</li><li>提供一份清晰的个人顺序学习路线方法</li><li>提供大量优质学习资源</li></ol><h2 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h2><p>可根据知识点前的符号按需选学，并获取知识点描述和学习资源。</p><ul><li><p>⭐️ 必学（追求速成）</p></li><li><p>✅ 建议学（重要知识）</p></li><li><p>❗ 面试重点</p></li><li><p>❌ 一般没必要学习</p></li><li><p>💬 描述</p></li><li><p>📚 资源</p></li><li><p>🎯 目标</p></li></ul><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><ol><li>前言 - 学编程需要的特质</li><li>前端学习七阶段<ol><li>前端入门</li><li>巩固基础</li><li>前端工程化</li><li>前端优化</li><li>前端生态</li><li>前端求职</li><li>前端未来</li></ol></li><li>我的前端学习路线</li><li>尾声 - 持续学习</li></ol><h2 id="前言-学编程需要的特质"><a href="#前言-学编程需要的特质" class="headerlink" title="前言 - 学编程需要的特质"></a>前言 - 学编程需要的特质</h2><p>相信自己有能力，那么你就真的会有！</p><ul><li>兴趣</li><li>坚持</li><li>付出</li><li>心态</li></ul><h2 id="一、前端入门"><a href="#一、前端入门" class="headerlink" title="一、前端入门"></a>一、前端入门</h2><ul><li><p>💬 描述：学习前端基础三件套，建议从实战开始，边学边练，培养兴趣，快速入门。</p></li><li><p>📚 资源</p><ul><li>freeCodecamp 在线编程：<a href="https://learn.freecodecamp.one/">https://learn.freecodecamp.one/</a></li><li>阿里云前端实战学习：<a href="https://edu.aliyun.com/roadmap/frontend">https://edu.aliyun.com/roadmap/frontend</a></li><li>W3Cschool 编程入门实战：<a href="https://www.w3cschool.cn/codecamp/">https://www.w3cschool.cn/codecamp/</a></li><li>pink老师前端入门教程：<a href="https://www.bilibili.com/video/BV14J4114768">https://www.bilibili.com/video/BV14J4114768</a></li></ul></li><li><p>🎯 目标：了解和实践各语言的基础语法，并能使用开发工具来独立开发一个留言板网站。</p></li></ul><h3 id="⭐️-开发工具"><a href="#⭐️-开发工具" class="headerlink" title="⭐️ 开发工具"></a>⭐️ 开发工具</h3><ul><li>💬 描述：工欲善其事，必先利其器。</li></ul><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><ul><li>⭐️ Chrome</li><li>✅ Edge</li><li>✅ Firefox</li><li>❌ Opera</li><li>Safari</li></ul><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><ul><li>⭐️ VSCode</li><li>✅ WebStorm</li><li>Atom</li><li>⭐️ Sublime Text</li><li>HBuilder X</li><li>记事本</li><li>在线 IDE</li></ul><h4 id="文档笔记"><a href="#文档笔记" class="headerlink" title="文档笔记"></a>文档笔记</h4><ul><li>✅ Markdown 语法</li><li>✅ Typora</li><li>在线笔记<ul><li>语雀</li><li>腾讯文档</li><li>石墨文档</li><li>印象笔记</li></ul></li><li>Mdnice</li></ul><h3 id="⭐️-HTML"><a href="#⭐️-HTML" class="headerlink" title="⭐️ HTML"></a>⭐️ HTML</h3><ul><li><p>💬 描述：用于定义一个网页结构的基本技术。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML">https://developer.mozilla.org/zh-CN/docs/Learn/HTML</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 标签</p><ul><li>分区 div</li><li>标题 h1 ~ h6</li><li>段落 p</li><li>图像 img</li><li>列表 ul / ol</li><li>超链接 a</li><li>表单 form</li><li>表格 table</li><li>框架 iframe</li></ul></li><li><p>⭐️ 属性</p></li><li><p>✅ HTML5 特性</p><ul><li>语义化标签</li><li>浏览器支持</li><li>多媒体标签</li><li>Canvas 画布</li><li>❌ 内联 SVG</li><li>本地存储<ul><li>localStorage</li><li>sessionStorage</li><li>❌ Web SQL</li></ul></li><li>Web Workers</li><li>应用缓存（Cache Manifest）</li><li>无障碍</li></ul></li></ul><h3 id="⭐️-CSS"><a href="#⭐️-CSS" class="headerlink" title="⭐️ CSS"></a>⭐️ CSS</h3><ul><li><p>💬 描述：层叠样式表，用于设计风格和布局。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS">https://developer.mozilla.org/zh-CN/docs/Learn/CSS</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 引入方式</p><ul><li>行内样式</li><li>内部样式表</li><li>外部样式表</li></ul></li><li><p>⭐️ 选择器</p><ul><li>通用选择器</li><li>标签选择器</li><li>id 选择器</li><li>class 选择器</li><li>属性选择器</li><li>派生选择器<ul><li>后代选择器</li><li>子元素选择器</li><li>相邻兄弟选择器</li></ul></li><li>组合选择器</li><li>伪选择器</li><li>选择器优先级</li></ul></li><li><p>⭐️ 属性</p><ul><li>单位<ul><li>px</li><li>em</li><li>rem</li><li>vw</li><li>vh</li></ul></li><li>背景</li><li>文本</li><li>字体</li><li>列表</li><li>表格</li></ul></li><li><p>⭐️ 文档流</p><ul><li>标准流</li><li>浮动流</li><li>定位流</li></ul></li><li><p>⭐️ 内联元素 / 块状元素</p></li><li><p>⭐️ 盒子模型</p><ul><li>content</li><li>padding</li><li>border</li><li>margin</li></ul></li><li><p>⭐️ 浮动</p><ul><li>设置浮动 float</li><li>清除浮动 clear</li></ul></li><li><p>⭐️ 定位</p><ul><li>static</li><li>absolute</li><li>fixed</li><li>relative</li><li>sticky</li></ul></li><li><p>⭐️ 层叠规则</p></li><li><p>❗ BFC 和 IFC 机制</p></li><li><p>CSS3</p><ul><li>⭐️ 响应式布局<ul><li>媒体查询</li><li>Flex 布局</li><li>Grid 布局</li><li>瀑布流</li></ul></li><li>动画</li><li>过渡</li><li>渐变</li><li>背景</li><li>边框</li><li>圆角</li><li>字体</li><li>2D / 3D 转换</li></ul></li></ul><h3 id="⭐️-JavaScript"><a href="#⭐️-JavaScript" class="headerlink" title="⭐️ JavaScript"></a>⭐️ JavaScript</h3><ul><li><p>💬 描述：具有函数优先的轻量级，解释型或即时编译型的编程语言。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 数据类型</p><ul><li>值类型<ul><li>字符串 String</li><li>数组 Number</li><li>布尔 Boolean</li><li>空值 Null</li><li>未定义 Undefined</li><li>Symbol</li></ul></li><li>引用类型<ul><li>对象 Object</li><li>数组 Array</li><li>函数 Function</li></ul></li></ul></li><li><p>✅ 数据类型转换</p></li><li><p>✅ 函数</p><ul><li>⭐️ 概念</li><li>⭐️ 自定义函数</li><li>调用方式<ul><li>⭐️ 全局调用</li><li>构造函数调用</li><li>⭐️ 函数方法调用</li><li>apply</li><li>call</li></ul></li><li>✅❗ 闭包</li></ul></li><li><p>✅ 对象</p><ul><li>概念</li><li>this</li><li>原型链和继承</li><li>常用对象<ul><li>数字 Number</li><li>字符串 String 对象</li><li>日期 Date 对象</li><li>数组 Array</li><li>布尔 Boolean</li><li>算数 Math</li></ul></li><li>自定义对象</li></ul></li><li><p>✅❗ 作用域（作用域链）</p></li><li><p>✅ BOM API</p></li><li><p>⭐️ DOM API</p></li><li><p>⭐️ JSON</p></li><li><p>⭐️ Ajax</p></li><li><p>✅ JavaScript 执行机制</p></li></ul><h4 id="✅-ES6-特性"><a href="#✅-ES6-特性" class="headerlink" title="✅ ES6+ 特性"></a>✅ ES6+ 特性</h4><ul><li><p>💬 描述：新引入的 JavaScript 语法特性。</p></li><li><p>📚 资源：ES6 入门教程 <a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></p></li><li><p>let 和 const</p></li><li><p>变量解构赋值</p></li><li><p>对象扩展和新增方法</p></li><li><p>Symbol</p></li><li><p>Set 和 Map 数据结构</p></li><li><p>⭐️❗ Promise &amp; async / await 异步编程</p></li><li><p>Generator 函数异步编程</p></li></ul><h2 id="二、巩固基础"><a href="#二、巩固基础" class="headerlink" title="二、巩固基础"></a>二、巩固基础</h2><ul><li><p>💬 描述：学习前端、计算机、软件开发相关基础知识，并复习巩固上阶段学到的前端三件套。</p></li><li><p>📚 资源</p><ul><li>《JavaScript 高级程序设计》：<a href="https://www.code-nav.cn/rd/?rid=28ee4e3e606b1e1a0e3cfd8952d172cf">https://www.code-nav.cn/rd/?rid=28ee4e3e606b1e1a0e3cfd8952d172cf</a></li><li>《JavaScript 忍者秘籍》：<a href="https://www.code-nav.cn/rd/?rid=28ee4e3e606b16c00e3c5b18609e3dc2">https://www.code-nav.cn/rd/?rid=28ee4e3e606b16c00e3c5b18609e3dc2</a></li></ul></li><li><p>🎯 目标：熟悉前端三件套语法，尤其是 JavaScript，并了解互联网、域名、浏览器、服务器等，扎实前端程序员的基本功，为下面进入实战开发做准备。</p></li></ul><h3 id="前端基础知识"><a href="#前端基础知识" class="headerlink" title="前端基础知识"></a>前端基础知识</h3><ul><li><p>✅ 互联网</p></li><li><p>⭐️ 域名</p></li><li><p>⭐️ DNS</p></li><li><p>⭐️ 服务器</p></li><li><p>✅ 浏览器</p><ul><li>浏览器 DOM 事件流 / 事件委托</li><li>⭐️ 浏览器加载顺序</li><li>⭐️ 浏览器渲染过程</li><li>浏览器事件循环</li><li>浏览器同源策略</li><li>❗ 跨域解决方案</li><li>浏览器缓存</li><li>控制台调试技巧</li></ul></li><li><p>✅ HTTP</p><ul><li>❗ HTTP 请求过程</li><li>常见 HTTP 协议<ul><li>HTTP 1.0</li><li>⭐️ HTTP 1.1</li><li>HTTP 2</li><li>HTTP 3</li></ul></li><li>⭐️ HTTP 请求类别</li><li>⭐️ 常见状态码<ul><li>1xx 信息</li><li>2xx 成功</li><li>3xx 重定向</li><li>4xx 客户端错误</li><li>5xx 服务器错误</li></ul></li><li>WebSocket</li><li>⭐️ Cookie</li><li>Session</li><li>⭐️ HTTPS</li></ul></li></ul><h3 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h3><h4 id="✅-算法和数据结构"><a href="#✅-算法和数据结构" class="headerlink" title="✅ 算法和数据结构"></a>✅ 算法和数据结构</h4><ul><li>⭐️ 时间 / 空间复杂度分析</li><li>数据结构<ul><li>数组</li><li>字符串</li><li>队列</li><li>栈</li><li>链表</li><li>集合</li><li>哈希表</li><li>二叉树</li></ul></li><li>算法<ul><li>排序</li><li>双指针</li><li>查找</li><li>分治</li><li>动态规划</li><li>递归</li><li>回溯</li><li>贪心</li><li>位运算</li><li>DFS</li><li>BFS</li><li>图</li></ul></li></ul><h4 id="✅-计算机网络"><a href="#✅-计算机网络" class="headerlink" title="✅ 计算机网络"></a>✅ 计算机网络</h4><ul><li>HTTP 协议</li><li>网络模型</li><li>UDP / TCP 协议</li></ul><h4 id="✅-操作系统"><a href="#✅-操作系统" class="headerlink" title="✅ 操作系统"></a>✅ 操作系统</h4><ul><li>进程、线程</li><li>进程 / 线程间通讯方式</li><li>进程调度算法</li><li>进程 / 线程状态</li><li>死锁</li><li>内存管理</li></ul><h3 id="软件开发基础"><a href="#软件开发基础" class="headerlink" title="软件开发基础"></a>软件开发基础</h3><h4 id="✅-设计模式"><a href="#✅-设计模式" class="headerlink" title="✅ 设计模式"></a>✅ 设计模式</h4><ul><li>单例模式</li><li>代理模式</li><li>工厂模式</li><li>装饰者模式</li><li>观察者模式</li><li>策略模式</li><li>门面模式</li></ul><h4 id="⭐️-Git-版本控制"><a href="#⭐️-Git-版本控制" class="headerlink" title="⭐️ Git 版本控制"></a>⭐️ Git 版本控制</h4><ul><li>常用命令</li></ul><h4 id="✅-Linux-服务器"><a href="#✅-Linux-服务器" class="headerlink" title="✅ Linux 服务器"></a>✅ Linux 服务器</h4><ul><li>常用命令</li></ul><h4 id="✅-正则表达式"><a href="#✅-正则表达式" class="headerlink" title="✅ 正则表达式"></a>✅ 正则表达式</h4><h2 id="三、前端工程化"><a href="#三、前端工程化" class="headerlink" title="三、前端工程化"></a>三、前端工程化</h2><ul><li><p>💬 描述：前端工程化是使用软件工程的技术和方法来进行前端的开发流程、技术、工具、经验等规范化、标准化，其主要目的为了提高开发过程中的开发效率，减少不必要的重复工作时间。</p></li><li><p>📚 资源</p><ul><li>什么是前端工程化？<a href="https://www.zhihu.com/question/433854153/answer/1713597311">https://www.zhihu.com/question/433854153/answer/1713597311</a></li></ul></li><li><p>🎯 目标：至少学会一门主流的前端开发框架（Vue / React），并配合脚手架、组件库、工具等从 0 开始独立搭建并开发一个完整的前端网站，可以试着仿一些知名站点。要求遵循企业开发规范，将项目代码提交到代码仓库中，并独立发布上线，供他人访问。此外，建议抓住机会参与一些团队项目，感受团队开发模式和前端工程化的优势。</p></li></ul><h3 id="⭐️-研发流程"><a href="#⭐️-研发流程" class="headerlink" title="⭐️ 研发流程"></a>⭐️ 研发流程</h3><ol><li>技术选型</li><li>初始化</li><li>开发</li><li>本地测试</li><li>代码提交</li><li>编译、打包、构建</li><li>部署</li><li>集成测试</li><li>发布上线</li><li>监控运维</li></ol><h3 id="⭐️-代码托管"><a href="#⭐️-代码托管" class="headerlink" title="⭐️ 代码托管"></a>⭐️ 代码托管</h3><ul><li><p>💬 描述：集中存储、备份你的代码，还能和团队成员协作开发。</p></li><li><p>⭐️ GitHub</p></li><li><p>Gitee</p></li><li><p>GitLab</p></li></ul><h3 id="✅-Node-JS"><a href="#✅-Node-JS" class="headerlink" title="✅ Node.JS"></a>✅ Node.JS</h3><ul><li>💬 描述：一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具！</li><li>📚 资源<ul><li>Node.js 官方教程：<a href="http://nodejs.cn/learn">http://nodejs.cn/learn</a></li><li>Node.js 入门：<a href="https://cnodejs.org/getstart">https://cnodejs.org/getstart</a></li></ul></li></ul><h4 id="⭐️-包管理"><a href="#⭐️-包管理" class="headerlink" title="⭐️ 包管理"></a>⭐️ 包管理</h4><ul><li><p>💬 描述：用于安装 Node.js 的扩展、工具等。</p></li><li><p>⭐️ npm</p></li><li><p>⭐️ yarn</p></li><li><p>❌ bower</p></li><li><p>✅ npx</p></li></ul><h4 id="开发框架"><a href="#开发框架" class="headerlink" title="开发框架"></a>开发框架</h4><ul><li>Express</li><li>Koa</li><li>Egg</li></ul><h3 id="开发框架-1"><a href="#开发框架-1" class="headerlink" title="开发框架"></a>开发框架</h3><ul><li>💬 描述：解决特定的问题,提高<em>开发</em>效率、简化我们的代码复杂度。</li></ul><h4 id="⭐️-CSS-框架"><a href="#⭐️-CSS-框架" class="headerlink" title="⭐️ CSS 框架"></a>⭐️ CSS 框架</h4><ul><li>✅ BootStrap</li><li>⭐️ Tailwind CSS</li></ul><h4 id="⭐️-JavaScript-框架"><a href="#⭐️-JavaScript-框架" class="headerlink" title="⭐️ JavaScript 框架"></a>⭐️ JavaScript 框架</h4><h5 id="⭐️-Vue"><a href="#⭐️-Vue" class="headerlink" title="⭐️ Vue"></a>⭐️ Vue</h5><ul><li>Vue Router</li><li>Vuex</li></ul><h5 id="⭐️-React"><a href="#⭐️-React" class="headerlink" title="⭐️ React"></a>⭐️ React</h5><ul><li>React DOM</li><li>React Router</li><li>Redux</li><li>MobX</li><li>React Hooks</li></ul><h5 id="❌-Angular"><a href="#❌-Angular" class="headerlink" title="❌ Angular"></a>❌ Angular</h5><ul><li>RxJS</li><li>NgRx</li></ul><h5 id="✅-Svelte"><a href="#✅-Svelte" class="headerlink" title="✅ Svelte"></a>✅ Svelte</h5><h5 id="✅-UmiJS"><a href="#✅-UmiJS" class="headerlink" title="✅ UmiJS"></a>✅ UmiJS</h5><h3 id="封装库"><a href="#封装库" class="headerlink" title="封装库"></a>封装库</h3><h4 id="⭐️-组件库"><a href="#⭐️-组件库" class="headerlink" title="⭐️ 组件库"></a>⭐️ 组件库</h4><ul><li>✅ LayUI</li><li>⭐️ ElementUI（Vue）</li><li>✅ VantUI（Vue）</li><li>⭐️ Ant Design（React）</li><li>Material UI</li></ul><h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul><li>✅ AntV</li><li>Apache ECharts</li><li>HighCharts</li><li>D3.js</li></ul><h4 id="组件（插件）"><a href="#组件（插件）" class="headerlink" title="组件（插件）"></a>组件（插件）</h4><ul><li>富文本编辑器</li><li>弹窗</li><li>轮播图</li></ul><h4 id="工具库"><a href="#工具库" class="headerlink" title="工具库"></a>工具库</h4><ul><li>✅ jQuery</li><li>✅ Lodash</li><li>✅ Axios</li><li>时间处理 Moment.js</li></ul><h4 id="动效库"><a href="#动效库" class="headerlink" title="动效库"></a>动效库</h4><ul><li>✅ Animate.css</li><li>Ant Motion</li></ul><h4 id="字体图标库"><a href="#字体图标库" class="headerlink" title="字体图标库"></a>字体图标库</h4><ul><li>⭐️ IconFont</li><li>IconPark</li><li>Font Awesome</li></ul><h3 id="⭐️-脚手架"><a href="#⭐️-脚手架" class="headerlink" title="⭐️ 脚手架"></a>⭐️ 脚手架</h3><ul><li><p>💬 描述：快速生成新项目的目录模板，提升开发效率和开发舒适性。</p></li><li><p>📚 资源：<a href="https://www.jianshu.com/p/25ce8cf2e6a7">https://www.jianshu.com/p/25ce8cf2e6a7</a></p></li><li><p>Vue CLI</p></li><li><p>create-react-app</p></li><li><p>✅ Yeoman</p></li></ul><h3 id="⭐️-前端架构设计"><a href="#⭐️-前端架构设计" class="headerlink" title="⭐️ 前端架构设计"></a>⭐️ 前端架构设计</h3><ul><li><p>💬 描述：一系列工具和流程的集合，旨在提升前端代码的质量，并实现高效可持续的工作流。</p></li><li><p>模块化</p></li><li><p>组件化</p></li><li><p>✅ MVVM</p></li><li><p>设计原则</p></li><li><p>⭐️ SPA 单页应用</p></li><li><p>⭐️ 多页应用</p></li><li><p>✅ 前端路由</p></li><li><p>PWA</p></li><li><p>有损服务</p></li></ul><h4 id="✅-服务端渲染"><a href="#✅-服务端渲染" class="headerlink" title="✅ 服务端渲染"></a>✅ 服务端渲染</h4><ul><li><p>💬 描述：在服务端渲染 HTML 页面的模式。</p></li><li><p>📚 资源：<a href="https://www.zhihu.com/question/379563505">https://www.zhihu.com/question/379563505</a></p></li><li><p>Next.js（React）</p></li><li><p>Nuxt.js（Vue）</p></li><li><p>❌ Universal（Angular）</p></li></ul><h4 id="BFF"><a href="#BFF" class="headerlink" title="BFF"></a>BFF</h4><ul><li><p>💬 描述：Backend For Frontend（服务于前端的后端），就是服务器设计 API 时会考虑前端的使用，并在服务端直接进行业务逻辑的处理。</p></li><li><p>📚 资源：<a href="https://www.jianshu.com/p/eb1875c62ad3">https://www.jianshu.com/p/eb1875c62ad3</a></p></li><li><p>GraphQL</p></li></ul><h4 id="✅-微前端"><a href="#✅-微前端" class="headerlink" title="✅ 微前端"></a>✅ 微前端</h4><ul><li><p>💬 描述：将前端应用分解成一些更小、更简单的能够独立开发、测试、部署的小块，从而解决庞大的一整块后端服务带来的变更与扩展方面的限制。</p></li><li><p>📚 资源：<a href="https://zhuanlan.zhihu.com/p/96464401">https://zhuanlan.zhihu.com/p/96464401</a></p></li><li><p>qiankun</p></li><li><p>single-spa</p></li></ul><h3 id="CSS-in-JS"><a href="#CSS-in-JS" class="headerlink" title="CSS in JS"></a>CSS in JS</h3><ul><li><p>💬 描述：用 JavaScript 来写 CSS。</p></li><li><p>📚 资源：<a href="http://www.ruanyifeng.com/blog/2017/04/css_in_js.html">http://www.ruanyifeng.com/blog/2017/04/css_in_js.html</a></p></li><li><p>内联样式</p></li><li><p>声明样式</p></li><li><p>引入样式</p></li></ul><h4 id="⭐️-CSS-模块化"><a href="#⭐️-CSS-模块化" class="headerlink" title="⭐️ CSS 模块化"></a>⭐️ CSS 模块化</h4><ul><li>⭐️ CSS Modules</li><li>✅ styled-components</li><li>✅ Styled JSX</li><li>Emotion</li></ul><h3 id="✅-开发调试"><a href="#✅-开发调试" class="headerlink" title="✅ 开发调试"></a>✅ 开发调试</h3><ul><li><p>💬 描述：本地开发时热更新，提升开发效率。</p></li><li><p>webpack-dev-server</p></li><li><p>serve</p></li></ul><h4 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h4><ul><li><p>💬 描述：将内网外网通过 nat 隧道打通，让内网的网站、数据让外网可以访问。</p></li><li><p>Ngrok</p></li><li><p>NATAPP</p></li></ul><h3 id="⭐️-CSS-预编译"><a href="#⭐️-CSS-预编译" class="headerlink" title="⭐️ CSS 预编译"></a>⭐️ CSS 预编译</h3><ul><li><p>💬 描述：使用新的扩展语言以增强 CSS 的能力，并通过预编译的方式将其转换为浏览器认识的 CSS 代码。</p></li><li><p>⭐️ SASS</p></li><li><p>✅ PostCSS</p></li><li><p>Stylus</p></li><li><p>❌ LESS</p></li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="测试分类"><a href="#测试分类" class="headerlink" title="测试分类"></a>测试分类</h4><ul><li>⭐️ UT 单元测试</li><li>SIT 系统集成测试</li><li>E2E 端到端测试</li><li>UAT 用户验收测试</li></ul><h4 id="✅-Mock"><a href="#✅-Mock" class="headerlink" title="✅ Mock"></a>✅ Mock</h4><ul><li><p>💬 描述：通过随机数据，模拟各种场景，增加单元测试的真实性。</p></li><li><p>Mock.js</p></li></ul><h4 id="✅-测试框架"><a href="#✅-测试框架" class="headerlink" title="✅ 测试框架"></a>✅ 测试框架</h4><ul><li><p>✅ Jest</p></li><li><p>Enzyme</p></li><li><p>✅ Puppeteer（Headless Browser）</p></li><li><p>Mocha</p></li><li><p>Jasmine</p></li></ul><h3 id="✅-代码质量"><a href="#✅-代码质量" class="headerlink" title="✅ 代码质量"></a>✅ 代码质量</h3><h4 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h4><ul><li><p>💬 描述：依照规范写出的代码会更加合理。</p></li><li><p>📚 资源：Airbnb 代码规范 <a href="https://github.com/BingKui/javascript-zh">https://github.com/BingKui/javascript-zh</a></p></li><li><p>CSS Style Guide</p></li><li><p>JavaScript Style Guide</p></li></ul><h4 id="类型校验"><a href="#类型校验" class="headerlink" title="类型校验"></a>类型校验</h4><ul><li>TypeScript</li></ul><h4 id="代码检查"><a href="#代码检查" class="headerlink" title="代码检查"></a>代码检查</h4><ul><li>ESLint</li><li>StyleLint</li></ul><h4 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h4><ul><li><p>💬 描述：根据配置自动格式化代码，统一格式。</p></li><li><p>Prettier</p></li></ul><h4 id="提交规范"><a href="#提交规范" class="headerlink" title="提交规范"></a>提交规范</h4><ul><li>约定式提交</li></ul><h4 id="提交检查"><a href="#提交检查" class="headerlink" title="提交检查"></a>提交检查</h4><ul><li><p>💬 描述：在提交代码时触发一些操作，比如检查代码的风格等。</p></li><li><p>pre-commit</p></li><li><p>husky</p></li></ul><h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3><h4 id="自动化构建"><a href="#自动化构建" class="headerlink" title="自动化构建"></a>自动化构建</h4><ul><li><p>💬 描述：按照配置好的流程自动打包构建项目，提高团队的开发效率，降低项目的维护难度。</p></li><li><p>Gulp</p></li><li><p>✅ npm script</p></li><li><p>Grunt</p></li></ul><h4 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h4><ul><li><p>💬 描述：将各种零散的📚 资源文件打包为可在浏览器等环境运行的代码。</p></li><li><p>⭐️ Webpack</p></li><li><p>✅ Rollup</p></li><li><p>✅ Vite</p></li><li><p>Parcel</p></li><li><p>Snowpack</p></li></ul><h3 id="CI-CD"><a href="#CI-CD" class="headerlink" title="CI / CD"></a>CI / CD</h3><ul><li>💬 描述：通过在应用开发阶段引入自动化来频繁向客户交付应用。</li><li>GitLab CI</li><li>✅ Jenkins</li></ul><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="⭐️-Web-服务器"><a href="#⭐️-Web-服务器" class="headerlink" title="⭐️ Web 服务器"></a>⭐️ Web 服务器</h4><h5 id="⭐️-Nginx"><a href="#⭐️-Nginx" class="headerlink" title="⭐️ Nginx"></a>⭐️ Nginx</h5><ul><li><p>💬 描述：高性能的 HTTP 和反向代理 web 服务器。</p></li><li><p>📚 资源：腾讯云动手实验室 <a href="https://cloud.tencent.com/developer/labs/gallery">https://cloud.tencent.com/developer/labs/gallery</a></p></li><li><p>反向代理</p></li><li><p>解决跨域</p></li><li><p>改写请求</p></li></ul><h5 id="✅-Apache"><a href="#✅-Apache" class="headerlink" title="✅ Apache"></a>✅ Apache</h5><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><h5 id="✅-Docker"><a href="#✅-Docker" class="headerlink" title="✅ Docker"></a>✅ Docker</h5><ul><li><p>💬 描述：容器是一个标准化的软件单元，它将代码及其所有依赖关系打包，以便应用程序从一个计算环境可靠快速地运行到另一个计算环境。Docker容器镜像是一个轻量的独立的可执行的软件包。包含程序运行的时候所需的一切：代码，运行时间，系统工具，系统库和设置。</p></li><li><p>📚 资源：Docker 从入门到实践 <a href="https://vuepress.mirror.docker-practice.com/">https://vuepress.mirror.docker-practice.com/</a></p></li><li><p>Dockerfile</p></li></ul><h5 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h5><h4 id="部署策略"><a href="#部署策略" class="headerlink" title="部署策略"></a>部署策略</h4><ul><li>全量发布</li><li>蓝绿部署</li><li>滚动发布</li><li>灰度发布</li></ul><h3 id="监控告警"><a href="#监控告警" class="headerlink" title="监控告警"></a>监控告警</h3><ul><li>前端埋点</li><li>错误监控</li><li>性能监控</li><li>行为监控</li></ul><h2 id="四、前端优化"><a href="#四、前端优化" class="headerlink" title="四、前端优化"></a>四、前端优化</h2><ul><li><p>💬 描述：通过分析和优化手段，提高网站的性能和用户体验。</p></li><li><p>🎯 目标：实践前端优化方法，从多个方面优化自己做过的项目，最好能将优化后的网站与原网站进行对比，得到一些数据和体验上的明显提升。</p></li></ul><h3 id="✅-性能优化"><a href="#✅-性能优化" class="headerlink" title="✅ 性能优化"></a>✅ 性能优化</h3><h4 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h4><ul><li><p>💬 描述：用于衡量一个 Web 页面的性能。</p></li><li><p>📚 资源：<a href="https://juejin.cn/post/6844904153869713416">https://juejin.cn/post/6844904153869713416</a></p></li><li><p>FP（First Paint）</p><ul><li>💬 描述：从开始加载到浏览器首次绘制像素到屏幕上的时间，也就是页面在屏幕上首次发生视觉变化的时间。</li></ul></li><li><p>FCP（First Contentful Paint）</p><ul><li>💬 描述：浏览器首次绘制来自 DOM 的内容的时间。</li></ul></li><li><p>FMP（First Meaningful Paint）</p><ul><li>💬 描述：页面的主要内容绘制到屏幕上的时间。</li></ul></li><li><p>FSP（First Screen Paint）</p><ul><li>💬 描述：页面从开始加载到首屏内容全部绘制完成的时间，用户可以看到首屏的全部内容。</li></ul></li><li><p>TTI（Time to Interactive）</p><ul><li>💬 描述：表示网页第一次完全达到可交互状态的时间点，浏览器已经可以持续性的响应用户的输入。</li></ul></li></ul><h4 id="优化手段"><a href="#优化手段" class="headerlink" title="优化手段"></a>优化手段</h4><ul><li><p>性能监控</p><ul><li>Performance API</li></ul></li><li><p>样式优化</p></li><li><p>JavaScript 优化</p><ul><li>防抖</li><li>节流</li></ul></li><li><p>代码分割</p></li><li><p>📚 资源压缩</p></li><li><p>打包优化</p></li><li><p>服务器优化</p></li><li><p>缓存优化</p><ul><li>Service Worker</li></ul></li><li><p>动画性能</p></li><li><p>dns-prefetch</p></li><li><p>Lazy loading</p></li><li><p>优化启动性能</p><ul><li>异步化</li></ul></li><li><p>渲染优化</p></li><li><p>网络优化</p></li><li><p>移动端性能优化</p></li><li><p>✅ CDN</p><ul><li>💬 描述：内容分发网络，是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。</li><li>📚 资源：BootCDN <a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a></li></ul></li></ul><h3 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h3><ul><li>设计系统</li><li>骨架屏</li></ul><h3 id="✅-兼容性"><a href="#✅-兼容性" class="headerlink" title="✅ 兼容性"></a>✅ 兼容性</h3><h4 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h4><ul><li>normalize.css</li><li>html5shiv.js</li><li>respond.js</li><li>Babel</li><li>Polyfill</li></ul><h4 id="屏幕分辨率兼容性"><a href="#屏幕分辨率兼容性" class="headerlink" title="屏幕分辨率兼容性"></a>屏幕分辨率兼容性</h4><h4 id="跨平台兼容性"><a href="#跨平台兼容性" class="headerlink" title="跨平台兼容性"></a>跨平台兼容性</h4><h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><ul><li><p>💬 描述：搜索引擎优化，利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。</p></li><li><p>📚 资源：百度搜索📚 资源平台 <a href="https://ziyuan.baidu.com/cooperateresource/index">https://ziyuan.baidu.com/cooperateresource/index</a></p></li><li><p>robots.txt</p></li><li><p>description</p></li><li><p>keywords</p></li><li><p>SiteMap</p></li><li><p>HTML 标签优化</p></li><li><p>站内链接建设</p></li><li><p>友情链接</p></li></ul><h3 id="✅-安全"><a href="#✅-安全" class="headerlink" title="✅ 安全"></a>✅ 安全</h3><ul><li>⭐️ XSS</li><li>CSRF</li><li>反爬虫</li><li>SQL 注入</li><li>DDoS</li></ul><h2 id="五、前端生态"><a href="#五、前端生态" class="headerlink" title="五、前端生态"></a>五、前端生态</h2><ul><li><p>💬 描述：如今，前端领域的范围越来越广，出现了更多前端工程师需要了解和关注的技术。</p></li><li><p>🎯 目标：能用学到的前端技术去做更多的事情，比如开发个人博客、文档网站、小程序、APP 等。</p></li></ul><h3 id="⭐️-静态站点构建"><a href="#⭐️-静态站点构建" class="headerlink" title="⭐️ 静态站点构建"></a>⭐️ 静态站点构建</h3><h4 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h4><ul><li>React Static</li></ul><h4 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h4><ul><li>✅ Gatsby.js</li><li>✅ Docusaurus</li><li>Hugo</li><li>Hexo</li></ul><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><ul><li>JekyII</li><li>⭐️ Docsify</li><li>VuePress</li><li>✅ Dumi</li></ul><h3 id="✅-大前端"><a href="#✅-大前端" class="headerlink" title="✅ 大前端"></a>✅ 大前端</h3><p>💬 描述：前端技术的融合更加紧密，应用的领域也更加广泛，前端领域的内容呈现多样化，除了网站外，还可以用前端技术跨平台开发 Android、iOS、小程序、虚拟现实、增强现实等。</p><h4 id="移动应用"><a href="#移动应用" class="headerlink" title="移动应用"></a>移动应用</h4><ul><li>Hybrid</li><li>WebView</li><li>React Native</li><li>Flutter</li></ul><h4 id="移动应用打包"><a href="#移动应用打包" class="headerlink" title="移动应用打包"></a>移动应用打包</h4><ul><li>Weex</li><li>Cordova</li><li>Phonegap</li><li>Ionic</li></ul><h4 id="桌面应用"><a href="#桌面应用" class="headerlink" title="桌面应用"></a>桌面应用</h4><ul><li>Electron</li><li>NW.js</li><li>Proton Native</li></ul><h4 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h4><ul><li>原生</li><li>WebView</li></ul><h4 id="跨端开发框架"><a href="#跨端开发框架" class="headerlink" title="跨端开发框架"></a>跨端开发框架</h4><ul><li>✅ uni-app</li><li>✅ Taro</li><li>Flutter</li><li>Chameleon</li><li>Wepy</li><li>Rax</li></ul><h4 id="移动端调试"><a href="#移动端调试" class="headerlink" title="移动端调试"></a>移动端调试</h4><ul><li>Chrome Dev Tools</li><li>Android Simulator</li><li>IOS Simulator</li></ul><h3 id="✅-Serverless"><a href="#✅-Serverless" class="headerlink" title="✅ Serverless"></a>✅ Serverless</h3><ul><li>💬 描述：一种构建和管理基于微服务架构的完整流程，允许你在服务部署级别而不是服务器部署级别来管理你的应用部署，你甚至可以管理某个具体功能或端口的部署，这就能让开发者快速迭代，更快速地开发软件。</li></ul><h3 id="✅-云开发"><a href="#✅-云开发" class="headerlink" title="✅ 云开发"></a>✅ 云开发</h3><ul><li><p>💬 描述：云端一体化的后端云服务 ，采用 Serverless 架构，免去了移动应用构建中繁琐的服务器搭建和运维。同时云开发提供的静态托管、命令行工具（CLI）、Flutter SDK 等能力降低了应用开发的门槛。使用云开发可以构建完整的小程序/小游戏、H5、Web、移动 App 等应用。</p></li><li><p>✅ 腾讯云云开发</p></li><li><p>阿里云云开发</p></li></ul><h3 id="低代码"><a href="#低代码" class="headerlink" title="低代码"></a>低代码</h3><ul><li><p>💬 描述：无需编码（零代码）或通过少量代码就可以快速生成应用程序的开发平台。通过可视化进行应用程序开发的方法，使具有不同经验水平的开发人员可以通过图形化的用户界面，使用拖拽组件和模型驱动的逻辑来创建网页和移动应用程序。</p></li><li><p>腾讯云低码</p></li><li><p>阿里宜搭</p></li></ul><h2 id="六、前端求职"><a href="#六、前端求职" class="headerlink" title="六、前端求职"></a>六、前端求职</h2><ul><li><p>💬 描述：求职是一个漫长的过程，建议拉长战线，尽早准备。</p></li><li><p>🎯 目标：找到理想的工作。</p></li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ul><li>2020 秋招面经汇总：<a href="https://www.nowcoder.com/discuss/205497">https://www.nowcoder.com/discuss/205497</a></li></ul><h3 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h3><ul><li>超级简历</li></ul><h3 id="面试题库"><a href="#面试题库" class="headerlink" title="面试题库"></a>面试题库</h3><ul><li>牛客前端工程师面试宝典：<a href="https://www.nowcoder.com/tutorial/96/f5212664ab664984882b00635066ded2">https://www.nowcoder.com/tutorial/96/f5212664ab664984882b00635066ded2</a></li><li>前端面试每日 3+1：<a href="https://github.com/haizlin/fe-interview">https://github.com/haizlin/fe-interview</a></li><li>React 面试题目 &amp; 题解：<a href="https://github.com/sudheerj/reactjs-interview-questions">https://github.com/sudheerj/reactjs-interview-questions</a></li></ul><h3 id="面经"><a href="#面经" class="headerlink" title="面经"></a>面经</h3><ul><li>前端面经汇总：<a href="https://www.nowcoder.com/discuss/experience?tagId=644">https://www.nowcoder.com/discuss/experience?tagId=644</a></li></ul><h3 id="面试实战"><a href="#面试实战" class="headerlink" title="面试实战"></a>面试实战</h3><ul><li>AI 模拟面试：<a href="https://www.nowcoder.com/interview/ai/cover?jobTagId=644">https://www.nowcoder.com/interview/ai/cover?jobTagId=644</a></li></ul><h2 id="七、前端未来"><a href="#七、前端未来" class="headerlink" title="七、前端未来"></a>七、前端未来</h2><ul><li><p>💬 描述：前端未来可能的发展趋势和热门技术。</p></li><li><p>🎯 目标：关注前沿，持续进步。</p></li><li><p>WebAssembly</p></li><li><p>智能 UI</p></li><li><p>React Server Component</p></li><li><p>CSS Houdini</p></li></ul><h3 id="WebComponents"><a href="#WebComponents" class="headerlink" title="WebComponents"></a>WebComponents</h3><ul><li>HTML templates（HTML模板）</li><li>Custom elements（自定义元素）</li><li>Shadow DOM（影子DOM）</li></ul><h2 id="我的前端学习路线"><a href="#我的前端学习路线" class="headerlink" title="我的前端学习路线"></a>我的前端学习路线</h2><p>虽然上面整理的学习路线知识点非常多，但是大家也别太担心，其实按照一定顺序和方法来学习，并不会很难，聊聊我的学习经历。</p><h3 id="1-快速入门，培养兴趣"><a href="#1-快速入门，培养兴趣" class="headerlink" title="1. 快速入门，培养兴趣"></a>1. 快速入门，培养兴趣</h3><p>刚开始学习前端时，一定要以培养兴趣、快速入门为目标。我入门前端时，由于没有基础、啥都不懂，因此选择在线实战教程网站来学习，跟着教程案例一行行把代码敲下来，实时浏览显示效果，很轻松地就把 HTML、CSS、JavaScript 的语法基础过了一遍。但是这时，我对看过的知识点没有什么印象，基本是看了就忘，当我想要自己写一个网站，也根本无从下手。</p><p>于是，我开始试着死记硬背代码，结果发现背了之后还是不会写。那干脆一不做二不休，直接打开编辑器和教程网站，把之前在线实战时敲过的代码复制粘贴到编辑器中，然后再修改保存，到浏览器中打开文件。这样虽然要在编辑器和浏览器中来回切换，但起码能看到自己的网页文件运行的效果了。后来，我利用浏览器开发者工具提升了自己开发网站的调试效率，敲出的代码达不到满意的效果时，就再去查，再改，再浏览，最后终于完成了一个留言板网站！</p><p>通过这件事，我明白了一个道理，既然记不住知识，那就先别强行记忆，上手多写，忘了就去查不就好了？不要担心自己知识不够做不出来，只要你去试，都一定能实现。</p><h3 id="2-多看多写，巩固基础"><a href="#2-多看多写，巩固基础" class="headerlink" title="2. 多看多写，巩固基础"></a>2. 多看多写，巩固基础</h3><p>在这种操作下，我虽然能使用基础三件套开发简易网站了，但做的很慢，还老出问题。于是，我开始完整地看了几本前端入门和项目实战书籍，有三件套入门的，也有响应式网站设计的，还有 JavaScript 综合讲解的，以及一套完整的视频教程，通过这些来复习巩固之前学过的知识，打好了基础，并且了解了更多实战教程上没见到的知识。</p><p>看书和视频的过程中，我跟着做了几个简易的网站，也是边看边做。在这之后，我发现自己渐渐地能够脱离文档来写网站了！</p><h3 id="3-框架学习，学以致用"><a href="#3-框架学习，学以致用" class="headerlink" title="3. 框架学习，学以致用"></a>3. 框架学习，学以致用</h3><p>但是，总感觉开发网站时，什么都要自己写，重复的代码写一大堆，很麻烦。于是，我试着上网搜了解决这些问题的方法，发现可以用组件库减少重复编写 HTML 和 CSS 代码，于是学了 LayUI，其实和之前一样的，就是打开官网找到要用的组件，然后复制到项目中修改就行了，写的多了竟然还真记住了一些（虽然这个没必要记）。</p><p>界面和样式代码简化了，但是 JavaScript 写的我依旧头疼。于是我决定进入下一个阶段的学习，当时先看了本书叫《锋利的 jQuery》来学习 jQuery，学会之后使用它趁热打铁做了几个网站，发现的确能大大简化繁琐的 JavaScript DOM 操作，让我尝到了甜头，又有了继续学习前端的动力。</p><p>在那之后大概半年，我开始学习主流前端框架 Vue，也是跟着视频教程学，并且结合 ElementUI 组件库开发了一个响应式网站。不得不说，习惯了用原生 JavaScript 和 jQuery 开发后，再去用 Vue 开发，真的是爽飞了，小有成就感。</p><h3 id="4-根据需要，自主学习"><a href="#4-根据需要，自主学习" class="headerlink" title="4. 根据需要，自主学习"></a>4. 根据需要，自主学习</h3><p>在那之后，我就是通过不断地做项目来积累经验，既然编程知识太多学不完，那我就随需随学，逐渐拓宽自己的知识面。举个例子，我要做一个移动端 H5 页面，那就去搜 Vue 的移动端组件库，学会了 MintUI、VantUI 等；项目中要处理日期，那我就去搜日期处理库，学会了 Moment.js；项目重复文件和代码太多，我就去网上搜一些组件化、模块化的最佳实践；项目代码太大、加载太慢，我就去网上搜一些前端压缩、性能优化的方式；要把开发好的项目变成 APP，那我就去网上搜到了 Cordova 等打包工具；跟其他同学一起做项目时比较混乱、开发效率低，我就去搜了一些代码规范、前端工程化等；遇到 Bug 时，也是自己去网上搜索解决方案，并且还要看看有没有知识点是我遗漏的，我会再去弥补学习。通过不断实践、不断遇到问题和自主解决问题，我始终保持着学习的积极性，学到了越来越多前端的知识，并通过归纳总结来加深印象。</p><h3 id="5-渐入佳境，拓宽视野"><a href="#5-渐入佳境，拓宽视野" class="headerlink" title="5. 渐入佳境，拓宽视野"></a>5. 渐入佳境，拓宽视野</h3><p>在那之后，我学前端技术非常快了，像 React、TypeScript、Redux、Dva、Umi、Lerna 等等都随用随学，随学随用。此外，我不仅仅关注前端网页开发本身，还同时关注前端的生态和发展，学习了微前端、Serverless、云开发、低代码等技术，因此个人的能力提升也很大。如今在鹅厂工作中也是，面对各种不同技术栈的前端项目，我都能迎难而上，毕竟不会就学嘛！</p><p>哦，写的渐入佳境，我都忘了，自己是一名后端工程师，还搁这儿吹牛逼呢（ 所以本路线难免会有不专业的地方，请大家见谅~</p><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p>总结一下，学前端的路线其实就一句话：基础三件套 =&gt; 巩固基础 =&gt; 学习框架 =&gt; 多做项目 =&gt; 按需学习 =&gt; 拓宽视野。还有一个学任何编程技术都要注意的点，全程多敲代码！多敲代码！多敲代码！</p><h2 id="尾声-持续学习"><a href="#尾声-持续学习" class="headerlink" title="尾声 - 持续学习"></a>尾声 - 持续学习</h2><h3 id="优秀前端人的特质"><a href="#优秀前端人的特质" class="headerlink" title="优秀前端人的特质"></a>优秀前端人的特质</h3><ul><li><p>深厚的功底</p></li><li><p>良好的编码习惯</p></li><li><p>发现问题的洞察力</p></li><li><p>思维灵活，善于思考</p></li><li><p>追求技术，紧跟前沿</p></li><li><p>有创造力，有行动力</p></li><li><p>追求用户体验</p></li><li><p>时刻保持好奇</p></li><li><p>全栈意识</p></li><li><p>解决问题的能力强</p></li><li><p>懂得合作和高效沟通</p></li><li><p>重视工作，同样重视生活</p></li><li><p>责任心和全局观</p></li><li><p>个人的进步能带动团队的进步</p></li></ul><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><ul><li>编程导航（包含以下所有资源，强烈推荐 👍）：<a href="https://www.code-nav.cn/">https://www.code-nav.cn</a></li><li>freeCodecamp 在线编程：<a href="https://learn.freecodecamp.one/">https://learn.freecodecamp.one/</a></li><li>阿里云前端实战学习：<a href="https://edu.aliyun.com/roadmap/frontend">https://edu.aliyun.com/roadmap/frontend</a></li><li>W3Cschool 编程入门实战：<a href="https://www.w3cschool.cn/codecamp/">https://www.w3cschool.cn/codecamp/</a></li><li>腾讯云动手实验室：<a href="https://cloud.tencent.com/developer/labs/gallery">https://cloud.tencent.com/developer/labs/gallery</a></li><li>pink老师前端入门教程：<a href="https://www.bilibili.com/video/BV14J4114768">https://www.bilibili.com/video/BV14J4114768</a></li><li>MDN 前端文档：<a href="https://developer.mozilla.org/zh-CN">https://developer.mozilla.org/zh-CN</a></li><li>Node.js 入门：<a href="https://cnodejs.org/getstart">https://cnodejs.org/getstart</a></li><li>前端清单：<a href="https://cheatsheets.devtool.tech/">https://cheatsheets.devtool.tech/</a></li><li>前端小课：<a href="https://lefex.github.io/">https://lefex.github.io/</a></li><li>被删的前端游乐场：<a href="http://www.godbasin.com/">http://www.godbasin.com/</a></li><li>《ES6 入门教程》：<a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></li><li>谷歌 Web 开发者：<a href="https://developers.google.com/web">https://developers.google.com/web</a></li><li>JavaScript 明星项目：<a href="https://risingstars.js.org/2020/zh">https://risingstars.js.org/2020/zh</a></li><li>Best of JS：<a href="https://bestofjs.org/">https://bestofjs.org/</a></li><li>Codewars：<a href="https://www.codewars.com/?language=javascript">https://www.codewars.com/?language=javascript</a></li><li>Vue.js examples：<a href="https://vuejsexamples.com/">https://vuejsexamples.com/</a></li></ul><h3 id="前端资讯"><a href="#前端资讯" class="headerlink" title="前端资讯"></a>前端资讯</h3><ul><li>掘金资讯：<a href="https://juejin.cn/news">https://juejin.cn/news</a></li><li>InfoQ：<a href="https://www.infoq.cn/topic/Front-end">https://www.infoq.cn/topic/Front-end</a></li><li>daily.dev：<a href="https://daily.dev/">https://daily.dev/</a></li></ul><h3 id="技术博客"><a href="#技术博客" class="headerlink" title="技术博客"></a>技术博客</h3><ul><li><p>掘金：<a href="https://juejin.cn/frontend">https://juejin.cn/frontend</a></p></li><li><p>腾讯前端 IMWEB：<a href="http://imweb.io/">http://imweb.io</a></p></li><li><p>腾讯 Web 前端团队 Alloy Team：<a href="http://www.alloyteam.com/">http://www.alloyteam.com</a></p></li><li><p>淘宝前端团队：<a href="http://taobaofed.org/">http://taobaofed.org</a></p></li><li><p>百度 Web 前端研发部：<a href="http://fex.baidu.com/">http://fex.baidu.com</a></p></li><li><p>京东凹凸实验室：<a href="https://aotu.io/">https://aotu.io</a></p></li><li><p>360 奇舞团：<a href="https://75team.com/">https://75team.com</a></p></li><li><p>七牛团队技术博客：<a href="http://blog.qiniu.com/">http://blog.qiniu.com</a></p></li><li><p>有赞技术团队：<a href="https://tech.youzan.com/tag/front-end/">https://tech.youzan.com/tag/front-end/</a></p></li><li><p>百度 EFE Tech：<a href="https://efe.baidu.com/">https://efe.baidu.com/</a></p></li><li><p>css-tricks：<a href="https://css-tricks.com/archives">https://css-tricks.com/archives</a></p></li><li><p>web.dev：<a href="https://web.dev/blog/">https://web.dev/blog/</a></p></li></ul><h3 id="学习要点"><a href="#学习要点" class="headerlink" title="学习要点"></a>学习要点</h3><ul><li>前期学习以培养兴趣为主，不要过于追求深层理解。</li><li>前端学习不能靠死记硬背，要多敲代码、多做项目实践。</li><li>不要急于求成，踏实积累才是硬道理。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/01/17/hello-world/"/>
    <url>/2022/01/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
